<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\LandTiger_Joystick.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\LandTiger_Joystick.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Wed Jan 27 15:47:00 2010
<BR><P>
<H3>Maximum Stack Usage =          8 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_sh &rArr; __user_setup_stackheap
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b8e938]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b8e80c]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e80c]">NMI_Handler</a><BR>
 <LI><a href="#[b8e7d0]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e7d0]">HardFault_Handler</a><BR>
 <LI><a href="#[b8e794]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e794]">MemManage_Handler</a><BR>
 <LI><a href="#[b8e758]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e758]">BusFault_Handler</a><BR>
 <LI><a href="#[b8e71c]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e71c]">UsageFault_Handler</a><BR>
 <LI><a href="#[b8e6e0]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e6e0]">SVC_Handler</a><BR>
 <LI><a href="#[b8e6a4]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e6a4]">DebugMon_Handler</a><BR>
 <LI><a href="#[b8e668]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e668]">PendSV_Handler</a><BR>
 <LI><a href="#[b8e62c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e62c]">SysTick_Handler</a><BR>
 <LI><a href="#[b8e5f0]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b8e5f0]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b8e848]">Reset_Handler</a>
 <LI><a href="#[b8e80c]">NMI_Handler</a>
 <LI><a href="#[b8e7d0]">HardFault_Handler</a>
 <LI><a href="#[b8e794]">MemManage_Handler</a>
 <LI><a href="#[b8e758]">BusFault_Handler</a>
 <LI><a href="#[b8e71c]">UsageFault_Handler</a>
 <LI><a href="#[b8e6e0]">SVC_Handler</a>
 <LI><a href="#[b8e6a4]">DebugMon_Handler</a>
 <LI><a href="#[b8e668]">PendSV_Handler</a>
 <LI><a href="#[b8e62c]">SysTick_Handler</a>
 <LI><a href="#[b8de70]">WDT_IRQHandler</a>
 <LI><a href="#[b8e08c]">TIMER0_IRQHandler</a>
 <LI><a href="#[b8e050]">TIMER1_IRQHandler</a>
 <LI><a href="#[b8e014]">TIMER2_IRQHandler</a>
 <LI><a href="#[b8dfd8]">TIMER3_IRQHandler</a>
 <LI><a href="#[b8df9c]">UART0_IRQHandler</a>
 <LI><a href="#[b8df60]">UART1_IRQHandler</a>
 <LI><a href="#[b8df24]">UART2_IRQHandler</a>
 <LI><a href="#[b8dee8]">UART3_IRQHandler</a>
 <LI><a href="#[b8e230]">PWM1_IRQHandler</a>
 <LI><a href="#[b8e3d4]">I2C0_IRQHandler</a>
 <LI><a href="#[b8e398]">I2C1_IRQHandler</a>
 <LI><a href="#[b8e35c]">I2C2_IRQHandler</a>
 <LI><a href="#[b8e140]">SPI_IRQHandler</a>
 <LI><a href="#[b8e104]">SSP0_IRQHandler</a>
 <LI><a href="#[b8e0c8]">SSP1_IRQHandler</a>
 <LI><a href="#[b8e2a8]">PLL0_IRQHandler</a>
 <LI><a href="#[b8e17c]">RTC_IRQHandler</a>
 <LI><a href="#[b8e500]">EINT0_IRQHandler</a>
 <LI><a href="#[b8e4c4]">EINT1_IRQHandler</a>
 <LI><a href="#[b8e488]">EINT2_IRQHandler</a>
 <LI><a href="#[b8e44c]">EINT3_IRQHandler</a>
 <LI><a href="#[b8e5f0]">ADC_IRQHandler</a>
 <LI><a href="#[b8e5b4]">BOD_IRQHandler</a>
 <LI><a href="#[b8deac]">USB_IRQHandler</a>
 <LI><a href="#[b8e578]">CAN_IRQHandler</a>
 <LI><a href="#[b8e53c]">DMA_IRQHandler</a>
 <LI><a href="#[b8e320]">I2S_IRQHandler</a>
 <LI><a href="#[b8e410]">ENET_IRQHandler</a>
 <LI><a href="#[b8e1b8]">RIT_IRQHandler</a>
 <LI><a href="#[b8e2e4]">MCPWM_IRQHandler</a>
 <LI><a href="#[b8e1f4]">QEI_IRQHandler</a>
 <LI><a href="#[b8e26c]">PLL1_IRQHandler</a>
 <LI><a href="#[b8ecbc]">SystemInit</a>
 <LI><a href="#[b8d36c]">__main</a>
 <LI><a href="#[b894d8]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b8d36c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[b86f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[b8d240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b86f94]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[b8d36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b86f58]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8d240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b86f1c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b86ee0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b86d3c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b86d3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[b86d3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b86c4c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[b8c430]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b8a900]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[b8a978]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[b8ad38]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b8abd0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b8a810]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b8a888]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b8ac48]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b8ab58]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b8b134]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[b8af90]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[b8af18]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[b8aea0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b8ae28]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b8adb0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b8b044]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[b8a7d4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[b8acc0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[b8aae0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b8b0bc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[b89820]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8a054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[b88bb4]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[b889d4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[b88998]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[b88b00]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[b88c68]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[b88a88]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[b8d240]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b86f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[b8d36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b8ce44]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[b8cac0]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b8c994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b8cd90]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[b8c430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b8cdcc]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[b8ccdc]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main
</UL>
<BR>[Calls]<UL><LI><a href="#[b8c82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[b8d768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8cd18]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b8bcb0]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b8c82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[b8a054]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[b89820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b8a090]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[b8a018]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[b89d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b8e848]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e80c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e7d0]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e794]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e758]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e71c]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e6e0]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e6a4]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e668]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e62c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e5f0]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8e5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b8e5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e5b4]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e578]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e53c]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e500]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e4c4]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e488]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e44c]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e410]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e3d4]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e398]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e35c]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e320]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e2e4]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e2a8]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e26c]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e230]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e1f4]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e1b8]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e17c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e140]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e104]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e0c8]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e08c]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e050]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e014]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8dfd8]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8df9c]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8df60]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8df24]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8dee8]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8deac]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8de70]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b8e938]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8c994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b8d7a4]"></a>LED_Config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8d768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8d768]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main
</UL>
<BR>[Calls]<UL><LI><a href="#[b8d7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Config
<LI><a href="#[b8ecbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b8ccdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b8d4d4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8d498]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8d45c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8c994]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[b8bda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[b8e938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[b8cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[b8c82c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b8bcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b8ccdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b8bddc]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b8bda0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8c994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b8bd64]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[b89d0c]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8a018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b894d8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[b8949c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b8ecf8]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, system_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[b8ecbc]"></a>SystemInit</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8d768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL><P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
