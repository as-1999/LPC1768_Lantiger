; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\spi_lpc17xx.o --depend=.\Obj\spi_lpc17xx.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\FlashFS -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\spi_lpc17xx.crf SPI_LPC17xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi_init PROC
;;;34     
;;;35     void spi_init (void) {
000000  4a2c              LDR      r2,|L1.180|
;;;36       /* Initialize and enable the SSP Interface module. */
;;;37     
;;;38       LPC_SC->PCONP       |= (1 << 21);           /* Enable power to SSPI0 block */
000002  f8520c6c          LDR      r0,[r2,#-0x6c]
;;;39     
;;;40       /* SSEL is GPIO, output set to high. */
;;;41       LPC_GPIO1->FIODIR   |=  (1<<21);            /* P1.21 is output             */
000006  492c              LDR      r1,|L1.184|
000008  f4401000          ORR      r0,r0,#0x200000       ;38
00000c  f8420c6c          STR      r0,[r2,#-0x6c]        ;38
000010  6a08              LDR      r0,[r1,#0x20]
000012  f4401000          ORR      r0,r0,#0x200000
000016  6208              STR      r0,[r1,#0x20]
;;;42       LPC_GPIO1->FIOPIN   |=  (1<<21);            /* set P1.21 high (SSEL inact.)*/
000018  6b4b              LDR      r3,[r1,#0x34]
;;;43       LPC_PINCON->PINSEL3 &= ~(0<<10);             /* P1.21 SSEL (used as GPIO)   */
00001a  4828              LDR      r0,|L1.188|
00001c  f4431300          ORR      r3,r3,#0x200000       ;42
000020  634b              STR      r3,[r1,#0x34]         ;42
000022  68c3              LDR      r3,[r0,#0xc]
000024  60c3              STR      r3,[r0,#0xc]
;;;44      
;;;45       /* P3.26 is SD Card Power Supply Enable Pin */
;;;46       LPC_GPIO3->FIODIR   |=  (1<<26);            /* P3.26 is output             */
000026  6e0b              LDR      r3,[r1,#0x60]
000028  f0436380          ORR      r3,r3,#0x4000000
00002c  660b              STR      r3,[r1,#0x60]
;;;47       LPC_GPIO3->FIOPIN   &= ~(1<<26);            /* set P3.26 low(enable power) */
00002e  6f4b              LDR      r3,[r1,#0x74]
000030  f0236380          BIC      r3,r3,#0x4000000
000034  674b              STR      r3,[r1,#0x74]
;;;48     
;;;49       /* SCK, MISO, MOSI are SSP pins. */
;;;50       LPC_PINCON->PINSEL3 &= ~(3UL<<8);          /* P1.20 cleared               */
000036  68c1              LDR      r1,[r0,#0xc]
000038  f4217140          BIC      r1,r1,#0x300
00003c  60c1              STR      r1,[r0,#0xc]
;;;51       LPC_PINCON->PINSEL3 |=  (3UL<<8);          /* P1.20 SCK0                  */
00003e  68c1              LDR      r1,[r0,#0xc]
000040  f4417140          ORR      r1,r1,#0x300
000044  60c1              STR      r1,[r0,#0xc]
;;;52       LPC_PINCON->PINSEL3 &= ~((3<<14) | (3<<16));  /* P1.23, P1.24 cleared        */
000046  68c1              LDR      r1,[r0,#0xc]
000048  f4213170          BIC      r1,r1,#0x3c000
00004c  60c1              STR      r1,[r0,#0xc]
;;;53       LPC_PINCON->PINSEL3 |=  ((3<<14) | (3<<16));  /* P1.23 MISO0, P1.24 MOSI0    */
00004e  68c1              LDR      r1,[r0,#0xc]
000050  f4413170          ORR      r1,r1,#0x3c000
000054  60c1              STR      r1,[r0,#0xc]
;;;54     
;;;55       LPC_SC->PCLKSEL1 &= ~(3<<10);               /* PCLKSP0 = CCLK/4 ( 25MHz)   */
000056  6fd0              LDR      r0,[r2,#0x7c]
000058  f4206040          BIC      r0,r0,#0xc00
00005c  67d0              STR      r0,[r2,#0x7c]
;;;56       LPC_SC->PCLKSEL1 |=  (1<<10);               /* PCLKSP0 = CCLK   (100MHz)   */
00005e  6fd0              LDR      r0,[r2,#0x7c]
;;;57     
;;;58       LPC_SSP0->CPSR = 250;                       /* 100MHz / 250 = 400kBit      */
000060  f04f01fa          MOV      r1,#0xfa
000064  f4406080          ORR      r0,r0,#0x400          ;56
000068  67d0              STR      r0,[r2,#0x7c]         ;56
00006a  4815              LDR      r0,|L1.192|
00006c  6101              STR      r1,[r0,#0x10]
;;;59                                                   /* maximum of 18MHz is possible*/    
;;;60       LPC_SSP0->CR0  = 0x0007;                    /* 8Bit, CPOL=0, CPHA=0        */
00006e  f04f0107          MOV      r1,#7
000072  6001              STR      r1,[r0,#0]
;;;61       LPC_SSP0->CR1  = 0x0002;                    /* SSP0 enable, master         */
000074  f04f0102          MOV      r1,#2
000078  6041              STR      r1,[r0,#4]
;;;62     }
00007a  4770              BX       lr
;;;63     
                          ENDP

                  spi_hi_speed PROC
;;;66     
;;;67     void spi_hi_speed (BOOL on) {
00007c  4910              LDR      r1,|L1.192|
;;;68       /* Set a SPI clock speed to desired value. */
;;;69     
;;;70       if (on == __TRUE) {
00007e  2801              CMP      r0,#1
000080  d002              BEQ      |L1.136|
;;;71         /* Max. 12 MBit used for Data Transfer. */
;;;72         LPC_SSP0->CPSR = 10;                      /* 100MHz / 10 = 10MBit        */
;;;73       }
;;;74       else {
;;;75         /* Max. 400 kBit used in Card Initialization. */
;;;76         LPC_SSP0->CPSR = 250;                     /* 100MHz / 250 = 400kBit      */
000082  20fa              MOVS     r0,#0xfa
                  |L1.132|
000084  6108              STR      r0,[r1,#0x10]         ;72
;;;77       }
;;;78     }
000086  4770              BX       lr
                  |L1.136|
000088  200a              MOVS     r0,#0xa               ;72
00008a  e7fb              B        |L1.132|
;;;79     
                          ENDP

                  spi_ss PROC
;;;82     
;;;83     void spi_ss (U32 ss) {
00008c  490a              LDR      r1,|L1.184|
;;;84       /* Enable/Disable SPI Chip Select (drive it high or low). */
;;;85     
;;;86       if (ss) {
00008e  2800              CMP      r0,#0
;;;87         LPC_GPIO1->FIOPIN |= (1<<21);             /* SSEL is GPIO, set to high.  */
;;;88       }
;;;89       else {
;;;90         LPC_GPIO1->FIOPIN &= ~(1<<21);            /* SSEL is GPIO, set to high.  */
000090  6b48              LDR      r0,[r1,#0x34]
000092  d002              BEQ      |L1.154|
000094  f4401000          ORR      r0,r0,#0x200000       ;87
000098  e001              B        |L1.158|
                  |L1.154|
00009a  f4201000          BIC      r0,r0,#0x200000
                  |L1.158|
00009e  6348              STR      r0,[r1,#0x34]         ;87
;;;91       }
;;;92     }
0000a0  4770              BX       lr
;;;93     
                          ENDP

                  spi_send PROC
;;;96     
;;;97     U8 spi_send (U8 outb) {
0000a2  4907              LDR      r1,|L1.192|
;;;98       /* Write and Read a byte on SPI interface. */
;;;99     
;;;100      LPC_SSP0->DR = outb;
0000a4  6088              STR      r0,[r1,#8]
                  |L1.166|
;;;101      while (LPC_SSP0->SR & BSY);                 /* Wait for transfer to finish */
0000a6  68c8              LDR      r0,[r1,#0xc]
0000a8  06c0              LSLS     r0,r0,#27
0000aa  d4fc              BMI      |L1.166|
;;;102      return (LPC_SSP0->DR);                      /* Return received value       */
0000ac  6888              LDR      r0,[r1,#8]
0000ae  b2c0              UXTB     r0,r0
;;;103    }
0000b0  4770              BX       lr
;;;104    
                          ENDP

0000b2  0000              DCW      0x0000
                  |L1.180|
                          DCD      0x400fc130
                  |L1.184|
                          DCD      0x2009c000
                  |L1.188|
                          DCD      0x4002c000
                  |L1.192|
                          DCD      0x40088000
