; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\_fs_read.o --depend=.\Obj\_fs_read.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\FlashFS -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\_fs_read.crf FlashFS\_fs_read.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  __read PROC
;;;15     
;;;16     int __read (int handle, U8 *buf, U32 len) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  4689              MOV      r9,r1
000008  4617              MOV      r7,r2
;;;17       /* Low level file read function */
;;;18       U32 size,rlen,nr;
;;;19       IOB *fcb;
;;;20     
;;;21       START_LOCK (int);
00000a  4825              LDR      r0,|L1.160|
00000c  f7fffffe          BL       _mutex_acquire
;;;22     
;;;23       if (buf == NULL) {
000010  f1b90f00          CMP      r9,#0
000014  d00d              BEQ      |L1.50|
;;;24         /* Invalid buffer, return error. */
;;;25         RETURN (-1);
;;;26       }
;;;27       fcb = &_iob[handle];
000016  eb040084          ADD      r0,r4,r4,LSL #2
00001a  4922              LDR      r1,|L1.164|
00001c  eb0000c4          ADD      r0,r0,r4,LSL #3
000020  eb010480          ADD      r4,r1,r0,LSL #2
;;;28     
;;;29       if (fcb->drive == DRV_MCARD) {
;;;30         /* Read data from Flash Memory Card. */
;;;31         rlen = fat_read (fcb, buf, len);
;;;32         /* Return number of bytes NOT read. */
;;;33         if (rlen == 0) {
;;;34           /* No data read, must be End of File.     */
;;;35           /* Note: Early End of File does not work for fseek(). */
;;;36           RETURN (0x80000000 | len);
000024  f0474800          ORR      r8,r7,#0x80000000
000028  7921              LDRB     r1,[r4,#4]            ;29
00002a  2904              CMP      r1,#4                 ;29
00002c  d004              BEQ      |L1.56|
;;;37         }
;;;38         /* Return number of bytes NOT read. */
;;;39         RETURN (len - rlen);
;;;40       }
;;;41     
;;;42       for (nr = 0; nr < len;  ) {
00002e  2600              MOVS     r6,#0
000030  e028              B        |L1.132|
                  |L1.50|
000032  f04f34ff          MOV      r4,#0xffffffff        ;25
000036  e028              B        |L1.138|
                  |L1.56|
000038  463a              MOV      r2,r7                 ;31
00003a  4649              MOV      r1,r9                 ;31
00003c  4620              MOV      r0,r4                 ;31
00003e  f7fffffe          BL       fat_read
000042  b358              CBZ      r0,|L1.156|
000044  1a3c              SUBS     r4,r7,r0              ;39
000046  e020              B        |L1.138|
                  |L1.72|
000048  e9d40105          LDRD     r0,r1,[r4,#0x14]      ;39
;;;43         if (fcb->_ftop == fcb->_fbot) {
00004c  4281              CMP      r1,r0
00004e  d103              BNE      |L1.88|
;;;44           if (fs_mark_fileMem (fcb) == __FALSE) {
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       fs_mark_fileMem
000056  b1f0              CBZ      r0,|L1.150|
                  |L1.88|
;;;45             /* Invalid File or End Of File found */
;;;46             if (nr == 0) {
;;;47               /* Early End of File does not work for fseek(). */
;;;48               RETURN (0x80000000 | len);
;;;49             }
;;;50             RETURN (len - nr);
;;;51           }
;;;52         }
;;;53         rlen = len - nr;
000058  e9d41005          LDRD     r1,r0,[r4,#0x14]
00005c  1bbd              SUBS     r5,r7,r6
;;;54         size = fcb->_ftop - fcb->_fbot;
00005e  1a40              SUBS     r0,r0,r1
;;;55         if (size < rlen) {
000060  42a8              CMP      r0,r5
000062  d200              BCS      |L1.102|
;;;56           rlen = size;
000064  4605              MOV      r5,r0
                  |L1.102|
;;;57         }
;;;58     
;;;59         fs_ReadBlock (((DEVCONF *)fcb->DevCfg)[fcb->_fblock].bStart + fcb->_fbot,
000066  8a22              LDRH     r2,[r4,#0x10]
000068  68e0              LDR      r0,[r4,#0xc]
00006a  4623              MOV      r3,r4
00006c  f8500032          LDR      r0,[r0,r2,LSL #3]
000070  462a              MOV      r2,r5
000072  4408              ADD      r0,r0,r1
000074  eb090106          ADD      r1,r9,r6
000078  f7fffffe          BL       fs_ReadBlock
;;;60                       &buf[nr], rlen, fcb);
;;;61         fcb->_fbot += rlen;
00007c  6960              LDR      r0,[r4,#0x14]
;;;62         nr         += rlen;
00007e  442e              ADD      r6,r6,r5
000080  4428              ADD      r0,r0,r5              ;61
000082  6160              STR      r0,[r4,#0x14]
                  |L1.132|
000084  42be              CMP      r6,r7                 ;42
000086  d3df              BCC      |L1.72|
;;;63       }
;;;64       /* Return number of bytes NOT read. */
;;;65       RETURN (0);
000088  2400              MOVS     r4,#0
                  |L1.138|
;;;66     
;;;67       END_LOCK;
00008a  4805              LDR      r0,|L1.160|
00008c  f7fffffe          BL       _mutex_release
000090  4620              MOV      r0,r4
;;;68     }
000092  e8bd87f0          POP      {r4-r10,pc}
                  |L1.150|
000096  b10e              CBZ      r6,|L1.156|
000098  1bbc              SUBS     r4,r7,r6              ;50
00009a  e7f6              B        |L1.138|
                  |L1.156|
00009c  4644              MOV      r4,r8                 ;50
00009e  e7f4              B        |L1.138|
;;;69     
                          ENDP

                  |L1.160|
                          DCD      _stream_list_lock
                  |L1.164|
                          DCD      _iob
