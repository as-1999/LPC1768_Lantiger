; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\fs_ffind.o --depend=.\Obj\fs_ffind.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\FlashFS -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\fs_ffind.crf FlashFS\fs_ffind.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ffind PROC
;;;16     
;;;17     int ffind (const char *pattern, FINFO *info) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
;;;18       /* Find a file that matches the search pattern. */
;;;19       IOB *fcb;
;;;20       const char *pat;
;;;21       char *ch1_ptr;
;;;22       char *ch2_ptr;
;;;23       char ch1,ch2;
;;;24       int handle;
;;;25       int len1,len2,len,len_aux;
;;;26       BOOL joker;
;;;27     
;;;28       START_LOCK (int);
000008  4870              LDR      r0,|L1.460|
00000a  f7fffffe          BL       _mutex_acquire
;;;29     
;;;30       /* Find unused _iob[] structure. */
;;;31       if ((handle = fs_find_iob ()) == EOF) {
00000e  f7fffffe          BL       fs_find_iob
000012  1c41              ADDS     r1,r0,#1
000014  d062              BEQ      |L1.220|
;;;32         /* Cannot find any unused _iob[] structure */
;;;33         RETURN (1);
;;;34       }
;;;35     
;;;36       fcb = &_iob[handle];
000016  eb000180          ADD      r1,r0,r0,LSL #2
00001a  eb0100c0          ADD      r0,r1,r0,LSL #3
00001e  496c              LDR      r1,|L1.464|
000020  eb010580          ADD      r5,r1,r0,LSL #2
;;;37       fcb->drive = fs_get_drive (pattern);
000024  4648              MOV      r0,r9
000026  f7fffffe          BL       fs_get_drive
00002a  f01000ff          ANDS     r0,r0,#0xff
00002e  7128              STRB     r0,[r5,#4]
;;;38       if (fcb->drive != DRV_NONE) {
000030  d002              BEQ      |L1.56|
;;;39         /* Skip drive letter 'X:' */
;;;40         pattern += 2;
000032  f1090902          ADD      r9,r9,#2
000036  e002              B        |L1.62|
                  |L1.56|
;;;41       }
;;;42       else {
;;;43         fcb->drive = _DEF_DRIVE;
000038  4866              LDR      r0,|L1.468|
00003a  8800              LDRH     r0,[r0,#0]  ; _DEF_DRIVE
00003c  7128              STRB     r0,[r5,#4]
                  |L1.62|
;;;44       }
;;;45       if (fcb->drive != DRV_MCARD) {
00003e  7928              LDRB     r0,[r5,#4]
000040  2804              CMP      r0,#4
000042  d003              BEQ      |L1.76|
;;;46         /* Set drive parameters. */
;;;47         if (fs_set_params (fcb) == __FALSE) {
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       fs_set_params
00004a  b3c0              CBZ      r0,|L1.190|
                  |L1.76|
;;;48           RETURN (1);
;;;49         }
;;;50       }
;;;51     
;;;52       pat  = pattern;
;;;53       len1 = 0;
00004c  2000              MOVS     r0,#0
00004e  4649              MOV      r1,r9                 ;52
;;;54       len2 = 0;
000050  4602              MOV      r2,r0
;;;55       while (*pat != 0) {
000052  e004              B        |L1.94|
                  |L1.84|
;;;56         len1 ++;
000054  1c40              ADDS     r0,r0,#1
;;;57         if (*pat == '\\') {
000056  2b5c              CMP      r3,#0x5c
000058  d100              BNE      |L1.92|
;;;58           len2 = len1;
00005a  4602              MOV      r2,r0
                  |L1.92|
;;;59         }
;;;60         pat ++;
00005c  1c49              ADDS     r1,r1,#1
                  |L1.94|
00005e  780b              LDRB     r3,[r1,#0]            ;55
000060  2b00              CMP      r3,#0                 ;55
000062  d1f7              BNE      |L1.84|
;;;61       }
;;;62       pat = pattern + len2;
000064  eb090002          ADD      r0,r9,r2
;;;63     
;;;64       if (strcmp (pat,"*.*") == 0) {
000068  a15b              ADR      r1,|L1.472|
00006a  9000              STR      r0,[sp,#0]
00006c  f7fffffe          BL       strcmp
000070  b330              CBZ      r0,|L1.192|
;;;65         joker = __TRUE;
;;;66         len1 = len2 = 0;
;;;67       }
;;;68       else {
;;;69         len1 = fs_strpos (pat, '*');
000072  212a              MOVS     r1,#0x2a
000074  9800              LDR      r0,[sp,#0]
000076  f7fffffe          BL       fs_strpos
00007a  4606              MOV      r6,r0
;;;70         len2 = strlen (pat);
00007c  9800              LDR      r0,[sp,#0]
00007e  f7fffffe          BL       strlen
000082  4607              MOV      r7,r0
;;;71         if (len1 == -1) {
000084  1c70              ADDS     r0,r6,#1
000086  d020              BEQ      |L1.202|
;;;72           /* Joker character not found in pattern. */
;;;73           joker = __FALSE;
;;;74         }
;;;75         else {
;;;76           /* Joker character '*' found in pattern. */
;;;77           joker  = __TRUE;
;;;78           len2  -= (len1 + 1);
000088  1bbf              SUBS     r7,r7,r6
00008a  f04f0a01          MOV      r10,#1                ;77
00008e  1e7f              SUBS     r7,r7,#1
                  |L1.144|
000090  f04f0b00          MOV      r11,#0                ;19
                  |L1.148|
;;;79         }
;;;80       }
;;;81     
;;;82       for (;;) {
;;;83         if (fcb->drive == DRV_MCARD) {
000094  7928              LDRB     r0,[r5,#4]
000096  2804              CMP      r0,#4
000098  d01a              BEQ      |L1.208|
;;;84           if (fat_ffind (pattern, info, fcb) == __FALSE) {
;;;85             RETURN (1);
;;;86           }
;;;87         }
;;;88         else {
;;;89           if (_ffind (info, fcb) == __FALSE) {
00009a  4629              MOV      r1,r5
00009c  4620              MOV      r0,r4
00009e  f7fffffe          BL       _ffind
                  |L1.162|
0000a2  b160              CBZ      r0,|L1.190|
;;;90             RETURN (1);
;;;91           }
;;;92         }
;;;93         info->name[255] = 0;
0000a4  f884b0ff          STRB     r11,[r4,#0xff]
;;;94     
;;;95         if (joker == __FALSE) {
0000a8  f1ba0f00          CMP      r10,#0
0000ac  d018              BEQ      |L1.224|
;;;96           /* No joker character, must exactly match (case insensitive). */
;;;97           /* Check if name is same as pat (case insensitive). */
;;;98           ch1_ptr = (char *)&info->name;
;;;99           ch2_ptr = (char *) pat;
;;;100          while (*ch1_ptr) {
;;;101            ch1 = *ch1_ptr++;
;;;102            ch2 = *ch2_ptr++;
;;;103            if (ch1 >= 'a' && ch1 <= 'z') {
;;;104              ch1 &= ~0x20;
;;;105            }
;;;106            if (ch2 >= 'a' && ch2 <= 'z') {
;;;107              ch2 &= ~0x20;
;;;108            }
;;;109            if (ch1 ^ ch2) {
;;;110              /* Filename does not match pattern. */
;;;111              goto not_match;
;;;112            }
;;;113          }
;;;114    found:fcb->fileID = info->fileID;
;;;115          if (fcb->drive == DRV_MCARD) {
;;;116            info->attrib = fcb->attrib;
;;;117            info->size   = fcb->fsize;
;;;118          }
;;;119          else {
;;;120            fcb->_fblock = 0;
;;;121            info->size   = __getfsize (fcb, __FALSE);
;;;122            info->attrib = 0;
;;;123          }
;;;124          RETURN (0);
;;;125        }
;;;126        else {
;;;127          /* Joker character found. */
;;;128          if (len1 == 0 && len2 == 0) {
0000ae  ea560007          ORRS     r0,r6,r7
0000b2  d02d              BEQ      |L1.272|
;;;129            goto found;
;;;130          }
;;;131          if (len1) {
0000b4  b3f6              CBZ      r6,|L1.308|
;;;132            ch1_ptr = (char *) pat;
;;;133            for (len_aux = 0; len_aux < len1; len_aux++) {
0000b6  2200              MOVS     r2,#0
0000b8  f8ddc000          LDR      r12,[sp,#0]
0000bc  e05c              B        |L1.376|
                  |L1.190|
0000be  e00d              B        |L1.220|
                  |L1.192|
0000c0  2600              MOVS     r6,#0                 ;66
0000c2  f04f0a01          MOV      r10,#1                ;65
0000c6  4637              MOV      r7,r6                 ;66
0000c8  e7e2              B        |L1.144|
                  |L1.202|
0000ca  f04f0a00          MOV      r10,#0                ;73
0000ce  e7df              B        |L1.144|
                  |L1.208|
0000d0  462a              MOV      r2,r5                 ;84
0000d2  4621              MOV      r1,r4                 ;84
0000d4  4648              MOV      r0,r9                 ;84
0000d6  f7fffffe          BL       fat_ffind
0000da  e7e2              B        |L1.162|
                  |L1.220|
0000dc  2401              MOVS     r4,#1                 ;90
0000de  e02b              B        |L1.312|
                  |L1.224|
0000e0  4622              MOV      r2,r4                 ;98
0000e2  f8ddc000          LDR      r12,[sp,#0]           ;100
0000e6  e010              B        |L1.266|
                  |L1.232|
0000e8  1c52              ADDS     r2,r2,#1              ;101
0000ea  f81c1b01          LDRB     r1,[r12],#1           ;102
0000ee  f1a00361          SUB      r3,r0,#0x61           ;103
0000f2  2b19              CMP      r3,#0x19              ;103
0000f4  d801              BHI      |L1.250|
0000f6  f0200020          BIC      r0,r0,#0x20           ;104
                  |L1.250|
0000fa  f1a10361          SUB      r3,r1,#0x61           ;106
0000fe  2b19              CMP      r3,#0x19              ;106
000100  d801              BHI      |L1.262|
000102  f0210120          BIC      r1,r1,#0x20           ;107
                  |L1.262|
000106  4288              CMP      r0,r1                 ;109
                  |L1.264|
000108  d1c4              BNE      |L1.148|
                  |L1.266|
00010a  7810              LDRB     r0,[r2,#0]            ;100
00010c  2800              CMP      r0,#0                 ;100
00010e  d1eb              BNE      |L1.232|
                  |L1.272|
000110  f8b40104          LDRH     r0,[r4,#0x104]        ;114
000114  8028              STRH     r0,[r5,#0]            ;114
000116  7928              LDRB     r0,[r5,#4]            ;115
000118  2804              CMP      r0,#4                 ;115
00011a  d013              BEQ      |L1.324|
00011c  465e              MOV      r6,r11                ;120
00011e  f8a5b010          STRH     r11,[r5,#0x10]        ;120
000122  2100              MOVS     r1,#0                 ;121
000124  4628              MOV      r0,r5                 ;121
000126  f7fffffe          BL       __getfsize
00012a  f8c40100          STR      r0,[r4,#0x100]        ;122
00012e  f8846106          STRB     r6,[r4,#0x106]        ;122
                  |L1.306|
000132  e000              B        |L1.310|
                  |L1.308|
000134  e022              B        |L1.380|
                  |L1.310|
000136  2400              MOVS     r4,#0                 ;124
                  |L1.312|
;;;134              /* Check pattern case insensitive. */
;;;135              ch1 = *ch1_ptr++;
;;;136              ch2 = info->name[len_aux];
;;;137              if (ch1 >= 'a' && ch1 <= 'z') {
;;;138                ch1 &= ~0x20;
;;;139              }
;;;140              if (ch2 >= 'a' && ch2 <= 'z') {
;;;141                ch2 &= ~0x20;
;;;142              }
;;;143              if (ch1 ^ ch2) {
;;;144                /* First part of filename does not match pattern. */
;;;145                goto not_match;
;;;146              }
;;;147            }
;;;148          }
;;;149          if (len2 == 0) {
;;;150            goto found;
;;;151          }
;;;152          len = strlen ((char *)info->name);
;;;153          if (len < len1+len2) {
;;;154            /* 'fname' not long enough. */
;;;155            continue;
;;;156          }
;;;157          /* Check last part of filename. */
;;;158          ch1_ptr = (char *) &pat[len1+1];
;;;159          for (len_aux = len-len2; len_aux < len; len_aux++) {
;;;160            /* Check pattern case insensitive. */
;;;161            ch1 = *ch1_ptr++;
;;;162            ch2 = info->name[len_aux];
;;;163            if (ch1 >= 'a' && ch1 <= 'z') {
;;;164              ch1 &= ~0x20;
;;;165            }
;;;166            if (ch2 >= 'a' && ch2 <= 'z') {
;;;167              ch2 &= ~0x20;
;;;168            }
;;;169            if (ch1 ^ ch2) {
;;;170              /* Last part of filename does not match pattern. */
;;;171              goto not_match;
;;;172            }
;;;173          }
;;;174          /* OK, last part of filename matches pattern. */
;;;175          goto found;
;;;176        }
;;;177    not_match:
;;;178        continue;
;;;179      }
;;;180    
;;;181      END_LOCK;
000138  4824              LDR      r0,|L1.460|
00013a  f7fffffe          BL       _mutex_release
00013e  4620              MOV      r0,r4
;;;182    }
000140  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.324|
000144  7968              LDRB     r0,[r5,#5]            ;116
000146  f8840106          STRB     r0,[r4,#0x106]        ;116
00014a  6ae8              LDR      r0,[r5,#0x2c]         ;117
00014c  f8c40100          STR      r0,[r4,#0x100]        ;117
000150  e7ef              B        |L1.306|
000152  bf00              NOP                            ;135
                  |L1.340|
000154  f81c0b01          LDRB     r0,[r12],#1           ;135
000158  5ca1              LDRB     r1,[r4,r2]            ;136
00015a  f1a00361          SUB      r3,r0,#0x61           ;137
00015e  2b19              CMP      r3,#0x19              ;137
000160  d801              BHI      |L1.358|
000162  f0200020          BIC      r0,r0,#0x20           ;138
                  |L1.358|
000166  f1a10361          SUB      r3,r1,#0x61           ;140
00016a  2b19              CMP      r3,#0x19              ;140
00016c  d801              BHI      |L1.370|
00016e  f0210120          BIC      r1,r1,#0x20           ;141
                  |L1.370|
000172  4288              CMP      r0,r1                 ;143
000174  d18e              BNE      |L1.148|
000176  1c52              ADDS     r2,r2,#1              ;133
                  |L1.376|
000178  42b2              CMP      r2,r6                 ;133
00017a  dbeb              BLT      |L1.340|
                  |L1.380|
00017c  2f00              CMP      r7,#0                 ;149
00017e  d0c7              BEQ      |L1.272|
000180  4620              MOV      r0,r4                 ;152
000182  f7fffffe          BL       strlen
000186  19f1              ADDS     r1,r6,r7              ;153
000188  4680              MOV      r8,r0                 ;152
00018a  4281              CMP      r1,r0                 ;153
00018c  dc82              BGT      |L1.148|
00018e  9800              LDR      r0,[sp,#0]            ;158
000190  eba80207          SUB      r2,r8,r7              ;159
000194  eb000c06          ADD      r12,r0,r6             ;158
000198  f10c0c01          ADD      r12,r12,#1            ;158
00019c  e012              B        |L1.452|
00019e  bf00              NOP                            ;161
                  |L1.416|
0001a0  f81c0b01          LDRB     r0,[r12],#1           ;161
0001a4  5ca1              LDRB     r1,[r4,r2]            ;162
0001a6  f1a00361          SUB      r3,r0,#0x61           ;163
0001aa  2b19              CMP      r3,#0x19              ;163
0001ac  d801              BHI      |L1.434|
0001ae  f0200020          BIC      r0,r0,#0x20           ;164
                  |L1.434|
0001b2  f1a10361          SUB      r3,r1,#0x61           ;166
0001b6  2b19              CMP      r3,#0x19              ;166
0001b8  d801              BHI      |L1.446|
0001ba  f0210120          BIC      r1,r1,#0x20           ;167
                  |L1.446|
0001be  4288              CMP      r0,r1                 ;169
0001c0  d1a2              BNE      |L1.264|
0001c2  1c52              ADDS     r2,r2,#1              ;159
                  |L1.452|
0001c4  4542              CMP      r2,r8                 ;159
0001c6  dbeb              BLT      |L1.416|
0001c8  e7a2              B        |L1.272|
;;;183    
                          ENDP

0001ca  0000              DCW      0x0000
                  |L1.460|
                          DCD      _stream_list_lock
                  |L1.464|
                          DCD      _iob
                  |L1.468|
                          DCD      _DEF_DRIVE
                  |L1.472|
0001d8  2a2e2a00          DCB      "*.*",0
