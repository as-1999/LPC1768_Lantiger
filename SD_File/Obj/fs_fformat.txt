; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\fs_fformat.o --depend=.\Obj\fs_fformat.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\FlashFS -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\fs_fformat.crf FlashFS\fs_fformat.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  fformat PROC
;;;15     
;;;16     int fformat (const char *drive) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;17       /* Format the FlashFS storage media. This function call is required  */
;;;18       /* before first use of the FlashFS to initialize the storage device. */
;;;19       IOB *fcb,*iop;
;;;20       int handle;
;;;21       U32 i;
;;;22     
;;;23       START_LOCK (int);
000004  4826              LDR      r0,|L1.160|
000006  f7fffffe          BL       _mutex_acquire
;;;24     
;;;25       /* Find an unused _iob structure. */
;;;26       if ((handle = fs_find_iob ()) == EOF) {
00000a  f7fffffe          BL       fs_find_iob
00000e  1c41              ADDS     r1,r0,#1
000010  d043              BEQ      |L1.154|
;;;27         RETURN (1);
;;;28       }
;;;29       fcb = &_iob[handle];
000012  eb000180          ADD      r1,r0,r0,LSL #2
000016  eb0100c0          ADD      r0,r1,r0,LSL #3
00001a  4922              LDR      r1,|L1.164|
00001c  eb010480          ADD      r4,r1,r0,LSL #2
;;;30       /* Get the drive index. */
;;;31       fcb->drive = fs_get_drive (drive);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       fs_get_drive
000026  f01000ff          ANDS     r0,r0,#0xff
00002a  7120              STRB     r0,[r4,#4]
;;;32       if (fcb->drive != DRV_NONE) {
00002c  d001              BEQ      |L1.50|
;;;33         /* Skip drive letter 'X:' */
;;;34         drive += 2;
00002e  1cad              ADDS     r5,r5,#2
000030  e002              B        |L1.56|
                  |L1.50|
;;;35       }
;;;36       else {
;;;37         /* Empty string or label provided. */
;;;38         fcb->drive = _DEF_DRIVE;
000032  481d              LDR      r0,|L1.168|
000034  8800              LDRH     r0,[r0,#0]  ; _DEF_DRIVE
000036  7120              STRB     r0,[r4,#4]
                  |L1.56|
;;;39       }
;;;40       if (fcb->drive == DRV_MCARD) {
000038  b2c0              UXTB     r0,r0
00003a  2804              CMP      r0,#4
00003c  d008              BEQ      |L1.80|
;;;41         /* Format a Flash Card. */
;;;42         if (fat_format (drive) == __TRUE) {
;;;43           RETURN (0);
;;;44         }
;;;45         /* FAT formatting error. */
;;;46         RETURN (1);
;;;47       }
;;;48       /* Set drive parameters. */
;;;49       if (fs_set_params (fcb) == __FALSE) {
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       fs_set_params
000044  b348              CBZ      r0,|L1.154|
;;;50         RETURN (1);
;;;51       }
;;;52     
;;;53       /* Reset any opened file handles for this drive */
;;;54       for (i = 0, iop = &_iob[0]; i < _NFILE; i++, iop++) {
000046  2100              MOVS     r1,#0
000048  4816              LDR      r0,|L1.164|
00004a  460a              MOV      r2,r1                 ;19
00004c  4b17              LDR      r3,|L1.172|
00004e  e010              B        |L1.114|
                  |L1.80|
000050  4628              MOV      r0,r5                 ;42
000052  f7fffffe          BL       fat_format
000056  2801              CMP      r0,#1                 ;42
000058  d019              BEQ      |L1.142|
00005a  e01e              B        |L1.154|
                  |L1.92|
;;;55         if (iop->drive != fcb->drive) {
00005c  7905              LDRB     r5,[r0,#4]
00005e  7926              LDRB     r6,[r4,#4]
000060  42b5              CMP      r5,r6
000062  d104              BNE      |L1.110|
;;;56           continue;
;;;57         }
;;;58         if (iop->flags & (_IOREAD|_IOWRT)) {
000064  8845              LDRH     r5,[r0,#2]
000066  07ad              LSLS     r5,r5,#30
000068  d001              BEQ      |L1.110|
;;;59           iop->flags  = 0;
00006a  8042              STRH     r2,[r0,#2]
;;;60           iop->fileID = 0;
00006c  8002              STRH     r2,[r0,#0]
                  |L1.110|
00006e  1c49              ADDS     r1,r1,#1              ;54
000070  3034              ADDS     r0,r0,#0x34           ;54
                  |L1.114|
000072  881d              LDRH     r5,[r3,#0]            ;54  ; _NFILE
000074  42a9              CMP      r1,r5                 ;54
000076  d3f1              BCC      |L1.92|
;;;61         }
;;;62       }
;;;63       for (i = 0; i < fcb->NumSect; i++) {
000078  2500              MOVS     r5,#0
00007a  e005              B        |L1.136|
                  |L1.124|
;;;64         if (fs_InitBlock (i, fcb) == __FALSE) {
00007c  4621              MOV      r1,r4
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       fs_InitBlock
000084  b148              CBZ      r0,|L1.154|
000086  1c6d              ADDS     r5,r5,#1              ;63
                  |L1.136|
000088  88e0              LDRH     r0,[r4,#6]            ;63
00008a  42a8              CMP      r0,r5                 ;63
00008c  d8f6              BHI      |L1.124|
                  |L1.142|
;;;65           /* Error, return nonzero value. */
;;;66           RETURN (1);
;;;67         }
;;;68       }
;;;69       RETURN (0);
00008e  2400              MOVS     r4,#0
                  |L1.144|
;;;70     
;;;71       END_LOCK;
000090  4803              LDR      r0,|L1.160|
000092  f7fffffe          BL       _mutex_release
000096  4620              MOV      r0,r4
;;;72     }
000098  bd70              POP      {r4-r6,pc}
                  |L1.154|
00009a  2401              MOVS     r4,#1                 ;66
00009c  e7f8              B        |L1.144|
;;;73     
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      _stream_list_lock
                  |L1.164|
                          DCD      _iob
                  |L1.168|
                          DCD      _DEF_DRIVE
                  |L1.172|
                          DCD      _NFILE
