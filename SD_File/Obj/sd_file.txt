; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\sd_file.o --depend=.\Obj\sd_file.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\FlashFS -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=.\Obj\sd_file.crf SD_File.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_p
                          REQUIRE _printf_s
                          REQUIRE _printf_n
                          REQUIRE _printf_charcount
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                          REQUIRE _scanf_int
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_x
                  get_entry PROC
;;;92      *---------------------------------------------------------------------------*/
;;;93     static char *get_entry (char *cp, char **pNext) {
000000  b570              PUSH     {r4-r6,lr}
;;;94       char *sp, lfn = 0, sep_ch = ' ';
000002  2400              MOVS     r4,#0
000004  2320              MOVS     r3,#0x20
000006  4625              MOV      r5,r4
;;;95     
;;;96       if (cp == NULL) {                           /* skip NULL pointers          */
000008  b938              CBNZ     r0,|L1.26|
;;;97         *pNext = cp;
;;;98         return (cp);
00000a  6008              STR      r0,[r1,#0]
;;;99       }
;;;100    
;;;101      for ( ; *cp == ' ' || *cp == '\"'; cp++) {  /* skip blanks and starting  " */
;;;102        if (*cp == '\"') { sep_ch = '\"'; lfn = 1; }
;;;103        *cp = 0;
;;;104      }
;;;105     
;;;106      for (sp = cp; *sp != CR && *sp != LF; sp++) {
;;;107        if ( lfn && *sp == '\"') break;
;;;108        if (!lfn && *sp == ' ' ) break;
;;;109      }
;;;110    
;;;111      for ( ; *sp == sep_ch || *sp == CR || *sp == LF; sp++) {
;;;112        *sp = 0;
;;;113        if ( lfn && *sp == sep_ch) { sp ++; break; }
;;;114      }
;;;115    
;;;116      *pNext = (*sp) ? sp : NULL;                 /* next entry                  */
;;;117      return (cp);
;;;118    }
00000c  bd70              POP      {r4-r6,pc}
                  |L1.14|
00000e  2a22              CMP      r2,#0x22              ;102
000010  d101              BNE      |L1.22|
000012  2322              MOVS     r3,#0x22              ;102
000014  2401              MOVS     r4,#1                 ;102
                  |L1.22|
000016  f8005b01          STRB     r5,[r0],#1            ;103
                  |L1.26|
00001a  7802              LDRB     r2,[r0,#0]            ;101
00001c  2a20              CMP      r2,#0x20              ;101
00001e  d0f6              BEQ      |L1.14|
000020  2a22              CMP      r2,#0x22              ;101
000022  d0f4              BEQ      |L1.14|
000024  4602              MOV      r2,r0                 ;106
000026  e006              B        |L1.54|
                  |L1.40|
000028  b114              CBZ      r4,|L1.48|
00002a  2e22              CMP      r6,#0x22              ;107
00002c  d00d              BEQ      |L1.74|
00002e  e001              B        |L1.52|
                  |L1.48|
000030  2e20              CMP      r6,#0x20              ;108
000032  d00a              BEQ      |L1.74|
                  |L1.52|
000034  1c52              ADDS     r2,r2,#1              ;106
                  |L1.54|
000036  7816              LDRB     r6,[r2,#0]            ;106
000038  2e0d              CMP      r6,#0xd               ;106
00003a  d006              BEQ      |L1.74|
00003c  2e0a              CMP      r6,#0xa               ;106
00003e  d1f3              BNE      |L1.40|
000040  e003              B        |L1.74|
                  |L1.66|
000042  7015              STRB     r5,[r2,#0]            ;112
000044  b104              CBZ      r4,|L1.72|
000046  b153              CBZ      r3,|L1.94|
                  |L1.72|
000048  1c52              ADDS     r2,r2,#1              ;111
                  |L1.74|
00004a  7816              LDRB     r6,[r2,#0]            ;111
00004c  429e              CMP      r6,r3                 ;111
00004e  d0f8              BEQ      |L1.66|
000050  2e0d              CMP      r6,#0xd               ;111
000052  d0f6              BEQ      |L1.66|
000054  2e0a              CMP      r6,#0xa               ;111
000056  d0f4              BEQ      |L1.66|
                  |L1.88|
000058  7813              LDRB     r3,[r2,#0]            ;116
00005a  b91b              CBNZ     r3,|L1.100|
00005c  e001              B        |L1.98|
                  |L1.94|
00005e  1c52              ADDS     r2,r2,#1              ;113
000060  e7fa              B        |L1.88|
                  |L1.98|
000062  2200              MOVS     r2,#0                 ;116
                  |L1.100|
000064  600a              STR      r2,[r1,#0]            ;116
000066  bd70              POP      {r4-r6,pc}
;;;119    
                          ENDP

                  dot_format PROC
;;;122     *---------------------------------------------------------------------------*/
;;;123    static void dot_format (U32 val, char *sp) {
000068  e92d47f0          PUSH     {r4-r10,lr}
00006c  4604              MOV      r4,r0
00006e  460e              MOV      r6,r1
;;;124    
;;;125      if (val >= (U32)1e9) {
000070  48ff              LDR      r0,|L1.1136|
;;;126        sp += sprintf (sp,"%d.",val/(U32)1e9);
;;;127        val %= (U32)1e9;
;;;128        sp += sprintf (sp,"%03d.",val/(U32)1e6);
000072  f8df9400          LDR      r9,|L1.1140|
;;;129        val %= (U32)1e6;
;;;130        sprintf (sp,"%03d.%03d",val/1000,val%1000);
000076  f44f757a          MOV      r5,#0x3e8
00007a  4284              CMP      r4,r0                 ;125
00007c  d310              BCC      |L1.160|
00007e  fbb4f7f0          UDIV     r7,r4,r0              ;126
000082  4680              MOV      r8,r0                 ;126
000084  463a              MOV      r2,r7                 ;126
000086  a1fc              ADR      r1,|L1.1144|
000088  4630              MOV      r0,r6                 ;126
00008a  f7fffffe          BL       __2sprintf
00008e  fb084417          MLS      r4,r8,r7,r4           ;127
000092  fbb4f7f9          UDIV     r7,r4,r9              ;128
000096  4406              ADD      r6,r6,r0              ;126
000098  46c8              MOV      r8,r9                 ;128
00009a  463a              MOV      r2,r7                 ;128
00009c  a1f7              ADR      r1,|L1.1148|
;;;131        return;
00009e  e006              B        |L1.174|
                  |L1.160|
;;;132      }
;;;133      if (val >= (U32)1e6) {
0000a0  454c              CMP      r4,r9
0000a2  d310              BCC      |L1.198|
;;;134        sp += sprintf (sp,"%d.",val/(U32)1e6);
0000a4  fbb4f7f9          UDIV     r7,r4,r9
0000a8  46c8              MOV      r8,r9
0000aa  463a              MOV      r2,r7
0000ac  a1f2              ADR      r1,|L1.1144|
                  |L1.174|
0000ae  4630              MOV      r0,r6                 ;128
0000b0  f7fffffe          BL       __2sprintf
0000b4  fb084117          MLS      r1,r8,r7,r4           ;129
0000b8  fbb1f2f5          UDIV     r2,r1,r5              ;130
0000bc  fb051312          MLS      r3,r5,r2,r1           ;130
0000c0  4430              ADD      r0,r0,r6              ;128
0000c2  a1f0              ADR      r1,|L1.1156|
0000c4  e007              B        |L1.214|
                  |L1.198|
;;;135        val %= (U32)1e6;
;;;136        sprintf (sp,"%03d.%03d",val/1000,val%1000);
;;;137        return;
;;;138      }
;;;139      if (val >= 1000) {
0000c6  42ac              CMP      r4,r5
0000c8  d309              BCC      |L1.222|
;;;140        sprintf (sp,"%d.%03d",val/1000,val%1000);
0000ca  fbb4f2f5          UDIV     r2,r4,r5
0000ce  fb054312          MLS      r3,r5,r2,r4
0000d2  a1ef              ADR      r1,|L1.1168|
0000d4  4630              MOV      r0,r6
                  |L1.214|
0000d6  e8bd47f0          POP      {r4-r10,lr}
0000da  f7ffbffe          B.W      __2sprintf
                  |L1.222|
;;;141        return;
;;;142      }
;;;143      sprintf (sp,"%d",val);
0000de  4622              MOV      r2,r4
0000e0  4630              MOV      r0,r6
0000e2  e8bd47f0          POP      {r4-r10,lr}
0000e6  a1ec              ADR      r1,|L1.1176|
0000e8  f7ffbffe          B.W      __2sprintf
;;;144    }
;;;145    
                          ENDP

                  cmd_capture PROC
;;;148     *---------------------------------------------------------------------------*/
;;;149    static void cmd_capture (char *par) {
0000ec  b538              PUSH     {r3-r5,lr}
;;;150      char *fname,*next;
;;;151      BOOL append,retv;
;;;152      FILE *f;
;;;153    
;;;154      fname = get_entry (par, &next);
0000ee  4669              MOV      r1,sp
0000f0  f7fffffe          BL       get_entry
0000f4  0004              MOVS     r4,r0
;;;155      if (fname == NULL) {
0000f6  d011              BEQ      |L1.284|
;;;156        printf ("\nFilename missing.\n");
;;;157        return;
;;;158      }
;;;159      append = __FALSE;
;;;160      if (next) {
0000f8  9800              LDR      r0,[sp,#0]
0000fa  2500              MOVS     r5,#0                 ;159
0000fc  b198              CBZ      r0,|L1.294|
;;;161        par = get_entry (next, &next);
0000fe  4669              MOV      r1,sp
000100  f7fffffe          BL       get_entry
000104  4605              MOV      r5,r0
;;;162        if ((strcmp (par, "/A") == 0) ||(strcmp (par, "/a") == 0)) {
000106  a1e5              ADR      r1,|L1.1180|
000108  f7fffffe          BL       strcmp
00010c  b140              CBZ      r0,|L1.288|
00010e  a1e4              ADR      r1,|L1.1184|
000110  4628              MOV      r0,r5
000112  f7fffffe          BL       strcmp
000116  b118              CBZ      r0,|L1.288|
;;;163          append = __TRUE;
;;;164        }
;;;165        else {
;;;166          printf ("\nCommand error.\n");
000118  a0e2              ADR      r0,|L1.1188|
;;;167          return;
00011a  e022              B        |L1.354|
                  |L1.284|
00011c  a0e6              ADR      r0,|L1.1208|
00011e  e020              B        |L1.354|
                  |L1.288|
000120  2501              MOVS     r5,#1                 ;163
;;;168        }
;;;169      }
;;;170      printf ((append) ? "\nAppend data to file %s" :
000122  a0ea              ADR      r0,|L1.1228|
000124  e000              B        |L1.296|
                  |L1.294|
;;;171                         "\nCapture data to file %s", fname);
000126  a0ef              ADR      r0,|L1.1252|
                  |L1.296|
000128  4621              MOV      r1,r4
00012a  f7fffffe          BL       __2printf
;;;172      printf("\nPress ESC to stop.\n");
00012e  a0f4              ADR      r0,|L1.1280|
000130  f7fffffe          BL       __2printf
;;;173      f = fopen (fname,append ? "a" : "w"); /* open a file for writing           */
000134  a1f8              ADR      r1,|L1.1304|
000136  b905              CBNZ     r5,|L1.314|
000138  a1f8              ADR      r1,|L1.1308|
                  |L1.314|
00013a  4620              MOV      r0,r4
00013c  f7fffffe          BL       fopen
000140  0004              MOVS     r4,r0
;;;174      if (f == NULL) {
000142  d011              BEQ      |L1.360|
                  |L1.324|
;;;175        printf ("\nCan not open file!\n");  /* error when trying to open file    */
;;;176        return;
;;;177      } 
;;;178      do {
;;;179        retv = getline (in_line, sizeof (in_line));
000144  21a0              MOVS     r1,#0xa0
000146  48f6              LDR      r0,|L1.1312|
000148  f7fffffe          BL       getline
00014c  4605              MOV      r5,r0
;;;180        fputs (in_line, f);
00014e  4621              MOV      r1,r4
000150  48f3              LDR      r0,|L1.1312|
000152  f7fffffe          BL       fputs
;;;181      } while (retv == __TRUE);
000156  2d01              CMP      r5,#1
000158  d0f4              BEQ      |L1.324|
;;;182      fclose (f);                         /* close the output file               */
00015a  4620              MOV      r0,r4
00015c  f7fffffe          BL       fclose
;;;183      printf ("\nFile closed.\n");
000160  a0f0              ADR      r0,|L1.1316|
                  |L1.354|
000162  f7fffffe          BL       __2printf
;;;184    }
000166  bd38              POP      {r3-r5,pc}
                  |L1.360|
000168  a0f2              ADR      r0,|L1.1332|
00016a  e7fa              B        |L1.354|
;;;185    
                          ENDP

                  cmd_fill PROC
;;;188     *---------------------------------------------------------------------------*/
;;;189    static void cmd_fill (char *par) {
00016c  b57c              PUSH     {r2-r6,lr}
;;;190      char *fname, *next;
;;;191      FILE *f;
;;;192      int i,cnt = 1000;
00016e  f44f717a          MOV      r1,#0x3e8
;;;193    
;;;194      fname = get_entry (par, &next);
000172  9101              STR      r1,[sp,#4]
000174  4669              MOV      r1,sp
000176  f7fffffe          BL       get_entry
00017a  0005              MOVS     r5,r0
;;;195      if (fname == NULL) {
00017c  d011              BEQ      |L1.418|
;;;196        printf ("\nFilename missing.\n");
;;;197        return;
;;;198      }
;;;199      if (next) {
00017e  9800              LDR      r0,[sp,#0]
000180  b138              CBZ      r0,|L1.402|
;;;200        par = get_entry (next, &next);
000182  4669              MOV      r1,sp
000184  f7fffffe          BL       get_entry
;;;201        if (sscanf (par,"%d", &cnt) == 0) {
000188  aa01              ADD      r2,sp,#4
00018a  a1c3              ADR      r1,|L1.1176|
00018c  f7fffffe          BL       __0sscanf
000190  b148              CBZ      r0,|L1.422|
                  |L1.402|
;;;202          printf ("\nCommand error.\n");
;;;203          return;
;;;204        }
;;;205      }
;;;206    
;;;207      f = fopen (fname, "w");               /* open a file for writing           */
000192  a1e2              ADR      r1,|L1.1308|
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       fopen
00019a  0006              MOVS     r6,r0
;;;208      if (f == NULL) {
00019c  d005              BEQ      |L1.426|
;;;209        printf ("\nCan not open file!\n");  /* error when trying to open file    */
;;;210        return;
;;;211      } 
;;;212      for (i = 0; i < cnt; i++)  {
00019e  2400              MOVS     r4,#0
0001a0  e00c              B        |L1.444|
                  |L1.418|
0001a2  a0c5              ADR      r0,|L1.1208|
0001a4  e011              B        |L1.458|
                  |L1.422|
0001a6  a0bf              ADR      r0,|L1.1188|
0001a8  e00f              B        |L1.458|
                  |L1.426|
0001aa  a0e2              ADR      r0,|L1.1332|
0001ac  e00d              B        |L1.458|
                  |L1.430|
;;;213        fprintf (f, "This is line # %d in file %s\n", i, fname);
0001ae  462b              MOV      r3,r5
0001b0  4622              MOV      r2,r4
0001b2  a1e6              ADR      r1,|L1.1356|
0001b4  4630              MOV      r0,r6
0001b6  f7fffffe          BL       __2fprintf
0001ba  1c64              ADDS     r4,r4,#1              ;212
                  |L1.444|
0001bc  9801              LDR      r0,[sp,#4]            ;212
0001be  4284              CMP      r4,r0                 ;212
0001c0  dbf5              BLT      |L1.430|
;;;214      }
;;;215      fclose (f);                         /* close the output file               */
0001c2  4630              MOV      r0,r6
0001c4  f7fffffe          BL       fclose
;;;216      printf ("\nFile closed.\n");
0001c8  a0d6              ADR      r0,|L1.1316|
                  |L1.458|
0001ca  f7fffffe          BL       __2printf
;;;217    }
0001ce  bd7c              POP      {r2-r6,pc}
;;;218    
                          ENDP

                  cmd_type PROC
;;;222     *---------------------------------------------------------------------------*/
;;;223    static void cmd_type (char *par) {
0001d0  b538              PUSH     {r3-r5,lr}
;;;224      char *fname,*next;
;;;225      FILE *f;
;;;226      int ch;
;;;227    
;;;228      fname = get_entry (par, &next);
0001d2  4669              MOV      r1,sp
0001d4  f7fffffe          BL       get_entry
0001d8  0004              MOVS     r4,r0
;;;229      if (fname == NULL) {
0001da  d00a              BEQ      |L1.498|
;;;230        printf ("\nFilename missing.\n");
;;;231        return;
;;;232      }
;;;233      printf("\nRead data from file %s\n",fname);
0001dc  4601              MOV      r1,r0
0001de  a0e3              ADR      r0,|L1.1388|
0001e0  f7fffffe          BL       __2printf
;;;234      f = fopen (fname,"r");              /* open the file for reading           */
0001e4  a1e8              ADR      r1,|L1.1416|
0001e6  4620              MOV      r0,r4
0001e8  f7fffffe          BL       fopen
0001ec  0004              MOVS     r4,r0
;;;235      if (f == NULL) {
0001ee  d002              BEQ      |L1.502|
0001f0  e006              B        |L1.512|
                  |L1.498|
0001f2  a0b1              ADR      r0,|L1.1208|
0001f4  e00d              B        |L1.530|
                  |L1.502|
;;;236        printf ("\nFile not found!\n");
0001f6  a0e5              ADR      r0,|L1.1420|
;;;237        return;
0001f8  e00b              B        |L1.530|
                  |L1.506|
;;;238      }
;;;239     
;;;240      while ((ch = fgetc (f)) != EOF) {   /* read the characters from the file   */
;;;241        putchar (ch);                     /* and write them on the screen        */
0001fa  49e9              LDR      r1,|L1.1440|
0001fc  f7fffffe          BL       putc
                  |L1.512|
000200  4620              MOV      r0,r4                 ;240
000202  f7fffffe          BL       fgetc
000206  1c41              ADDS     r1,r0,#1              ;240
000208  d1f7              BNE      |L1.506|
;;;242      }
;;;243      fclose (f);                         /* close the input file when done      */
00020a  4620              MOV      r0,r4
00020c  f7fffffe          BL       fclose
;;;244      printf ("\nFile closed.\n");
000210  a0c4              ADR      r0,|L1.1316|
                  |L1.530|
000212  f7fffffe          BL       __2printf
;;;245    }
000216  bd38              POP      {r3-r5,pc}
;;;246    
                          ENDP

                  cmd_rename PROC
;;;249     *---------------------------------------------------------------------------*/
;;;250    static void cmd_rename (char *par) {
000218  b5f8              PUSH     {r3-r7,lr}
;;;251      char *fname,*fnew,*next,dir;
;;;252    
;;;253      fname = get_entry (par, &next);
00021a  4669              MOV      r1,sp
00021c  f7fffffe          BL       get_entry
000220  0004              MOVS     r4,r0
;;;254      if (fname == NULL) {
000222  d014              BEQ      |L1.590|
;;;255        printf ("\nFilename missing.\n");
;;;256        return;
;;;257      }
;;;258      fnew = get_entry (next, &next);
000224  4669              MOV      r1,sp
000226  9800              LDR      r0,[sp,#0]
000228  f7fffffe          BL       get_entry
00022c  0005              MOVS     r5,r0
;;;259      if (fnew == NULL) {
00022e  d010              BEQ      |L1.594|
;;;260        printf ("\nNew Filename missing.\n");
;;;261        return;
;;;262      }
;;;263      if (strcmp (fname,fnew) == 0) {
000230  4601              MOV      r1,r0
000232  4620              MOV      r0,r4
000234  f7fffffe          BL       strcmp
000238  b168              CBZ      r0,|L1.598|
;;;264        printf ("\nNew name is the same.\n");
;;;265        return;
;;;266      }
;;;267    
;;;268      dir = 0;
00023a  2600              MOVS     r6,#0
;;;269      if (*(fname + strlen(fname) - 1) == '\\') {
00023c  4620              MOV      r0,r4
00023e  f7fffffe          BL       strlen
000242  4420              ADD      r0,r0,r4
000244  f8100c01          LDRB     r0,[r0,#-1]
000248  285c              CMP      r0,#0x5c
00024a  d006              BEQ      |L1.602|
00024c  e006              B        |L1.604|
                  |L1.590|
00024e  a09a              ADR      r0,|L1.1208|
000250  e016              B        |L1.640|
                  |L1.594|
000252  a0d4              ADR      r0,|L1.1444|
000254  e014              B        |L1.640|
                  |L1.598|
000256  a0d9              ADR      r0,|L1.1468|
000258  e012              B        |L1.640|
                  |L1.602|
;;;270        dir = 1;
00025a  2601              MOVS     r6,#1
                  |L1.604|
;;;271      }
;;;272    
;;;273      if (frename (fname, fnew) == 0) {
00025c  4629              MOV      r1,r5
00025e  4620              MOV      r0,r4
000260  f7fffffe          BL       frename
000264  b110              CBZ      r0,|L1.620|
;;;274        if (dir) {
;;;275          printf ("\nDirectory %s renamed to %s\n",fname,fnew);
;;;276        }
;;;277        else {
;;;278          printf ("\nFile %s renamed to %s\n",fname,fnew);
;;;279        }
;;;280      }
;;;281      else {
;;;282        if (dir) {
000266  b156              CBZ      r6,|L1.638|
;;;283          printf ("\nDirectory rename error.\n");
000268  a0da              ADR      r0,|L1.1492|
00026a  e009              B        |L1.640|
                  |L1.620|
00026c  462a              MOV      r2,r5                 ;278
00026e  4621              MOV      r1,r4                 ;278
000270  b10e              CBZ      r6,|L1.630|
000272  a0df              ADR      r0,|L1.1520|
000274  e000              B        |L1.632|
                  |L1.630|
000276  a0e6              ADR      r0,|L1.1552|
                  |L1.632|
000278  f7fffffe          BL       __2printf
;;;284        }
;;;285        else {
;;;286          printf ("\nFile rename error.\n");
;;;287        }
;;;288      }
;;;289    }
00027c  bdf8              POP      {r3-r7,pc}
                  |L1.638|
00027e  a0ea              ADR      r0,|L1.1576|
                  |L1.640|
000280  f7fffffe          BL       __2printf
000284  bdf8              POP      {r3-r7,pc}
;;;290    
                          ENDP

                  cmd_copy PROC
;;;293     *---------------------------------------------------------------------------*/
;;;294    static void cmd_copy (char *par) {
000286  e92d47f0          PUSH     {r4-r10,lr}
00028a  f5ad7d02          SUB      sp,sp,#0x208
;;;295      char *fname,*fnew,*fmer,*next;
;;;296      FILE *fin,*fout;
;;;297      U32 cnt,total;
;;;298      char buf[512];
;;;299      BOOL merge;
;;;300    
;;;301      fname = get_entry (par, &next);
00028e  a980              ADD      r1,sp,#0x200
000290  f7fffffe          BL       get_entry
000294  0007              MOVS     r7,r0
;;;302      if (fname == NULL) {
000296  d00d              BEQ      |L1.692|
;;;303        printf ("\nFilename missing.\n");
;;;304        return;
;;;305      }
;;;306      fmer = get_entry (next, &next);
000298  a980              ADD      r1,sp,#0x200
00029a  9880              LDR      r0,[sp,#0x200]
00029c  f7fffffe          BL       get_entry
0002a0  0005              MOVS     r5,r0
;;;307      if (fmer == NULL) {
0002a2  d009              BEQ      |L1.696|
;;;308        printf ("\nNew Filename missing.\n");
;;;309        return;
;;;310      }
;;;311      fnew = get_entry (next, &next);
0002a4  a980              ADD      r1,sp,#0x200
0002a6  9880              LDR      r0,[sp,#0x200]
0002a8  f7fffffe          BL       get_entry
0002ac  0004              MOVS     r4,r0
;;;312      if (fnew != NULL) {
0002ae  d005              BEQ      |L1.700|
;;;313        merge = __TRUE;
0002b0  2601              MOVS     r6,#1
0002b2  e005              B        |L1.704|
                  |L1.692|
0002b4  a080              ADR      r0,|L1.1208|
0002b6  e028              B        |L1.778|
                  |L1.696|
0002b8  a0ba              ADR      r0,|L1.1444|
0002ba  e026              B        |L1.778|
                  |L1.700|
;;;314      }
;;;315      else {
;;;316        merge = __FALSE;
0002bc  2600              MOVS     r6,#0
;;;317        fnew = fmer;
0002be  462c              MOV      r4,r5
                  |L1.704|
;;;318      }
;;;319      if ((strcmp (fname,fnew) == 0)        ||
0002c0  4621              MOV      r1,r4
0002c2  4638              MOV      r0,r7
0002c4  f7fffffe          BL       strcmp
0002c8  b1f0              CBZ      r0,|L1.776|
;;;320          (merge && strcmp (fmer,fnew) == 0)) {
0002ca  b126              CBZ      r6,|L1.726|
0002cc  4621              MOV      r1,r4
0002ce  4628              MOV      r0,r5
0002d0  f7fffffe          BL       strcmp
0002d4  b1c0              CBZ      r0,|L1.776|
                  |L1.726|
;;;321        printf ("\nNew name is the same.\n");
;;;322        return;
;;;323      }
;;;324    
;;;325      fin = fopen (fname,"r");            /* open the file for reading           */
0002d6  a1ac              ADR      r1,|L1.1416|
0002d8  4638              MOV      r0,r7
0002da  f7fffffe          BL       fopen
0002de  ea5f0900          MOVS     r9,r0
;;;326      if (fin == NULL) {
0002e2  d018              BEQ      |L1.790|
;;;327        printf ("\nFile %s not found!\n",fname);
;;;328        return;
;;;329      }
;;;330    
;;;331      if (merge == __FALSE) {
0002e4  b1d6              CBZ      r6,|L1.796|
;;;332        printf ("\nCopy file %s to %s\n",fname,fnew);
;;;333      }
;;;334      else {
;;;335        printf ("\nCopy file %s, %s to %s\n",fname,fmer,fnew);
0002e6  4623              MOV      r3,r4
0002e8  462a              MOV      r2,r5
0002ea  4639              MOV      r1,r7
0002ec  a0d4              ADR      r0,|L1.1600|
0002ee  f7fffffe          BL       __2printf
                  |L1.754|
;;;336      }
;;;337      fout = fopen (fnew,"w");            /* open the file for writing           */
0002f2  a18a              ADR      r1,|L1.1308|
0002f4  4620              MOV      r0,r4
0002f6  f7fffffe          BL       fopen
0002fa  ea5f0800          MOVS     r8,r0
;;;338      if (fout == NULL) {
0002fe  d013              BEQ      |L1.808|
;;;339        printf ("\nFailed to open %s for writing!\n",fnew);
;;;340        fclose (fin);
;;;341        return;
;;;342      }
;;;343    
;;;344      total = 0;
000300  2400              MOVS     r4,#0
;;;345      while ((cnt = fread (&buf, 1, 512, fin)) != 0) {
000302  f44f7700          MOV      r7,#0x200
000306  e01e              B        |L1.838|
                  |L1.776|
000308  a0ac              ADR      r0,|L1.1468|
                  |L1.778|
00030a  f7fffffe          BL       __2printf
                  |L1.782|
;;;346        fwrite (&buf, 1, cnt, fout);
;;;347        total += cnt;
;;;348      }
;;;349      fclose (fin);                       /* close input file when done          */
;;;350    
;;;351      if (merge == __TRUE) {
;;;352        fin = fopen (fmer,"r");           /* open the file for reading           */
;;;353        if (fin == NULL) {
;;;354          printf ("\nFile %s not found!\n",fmer);
;;;355        }
;;;356        else {
;;;357          while ((cnt = fread (&buf, 1, 512, fin)) != 0) {
;;;358            fwrite (&buf, 1, cnt, fout);
;;;359            total += cnt;
;;;360          }
;;;361          fclose (fin);
;;;362        }
;;;363      }
;;;364      fclose (fout);
;;;365      dot_format (total, &buf[0]);
;;;366      printf ("\n%s bytes copied.\n", &buf[0]);
;;;367    }
00030e  f50d7d02          ADD      sp,sp,#0x208
000312  e8bd87f0          POP      {r4-r10,pc}
                  |L1.790|
000316  4639              MOV      r1,r7                 ;327
000318  a0d0              ADR      r0,|L1.1628|
00031a  e048              B        |L1.942|
                  |L1.796|
00031c  4622              MOV      r2,r4                 ;332
00031e  4639              MOV      r1,r7                 ;332
000320  a0d4              ADR      r0,|L1.1652|
000322  f7fffffe          BL       __2printf
000326  e7e4              B        |L1.754|
                  |L1.808|
000328  4621              MOV      r1,r4                 ;339
00032a  a0d8              ADR      r0,|L1.1676|
00032c  f7fffffe          BL       __2printf
000330  4648              MOV      r0,r9                 ;340
000332  f7fffffe          BL       fclose
000336  e7ea              B        |L1.782|
                  |L1.824|
000338  4602              MOV      r2,r0                 ;346
00033a  4643              MOV      r3,r8                 ;346
00033c  2101              MOVS     r1,#1                 ;346
00033e  4668              MOV      r0,sp                 ;346
000340  f7fffffe          BL       fwrite
000344  4454              ADD      r4,r4,r10             ;347
                  |L1.838|
000346  464b              MOV      r3,r9                 ;345
000348  463a              MOV      r2,r7                 ;345
00034a  2101              MOVS     r1,#1                 ;345
00034c  4668              MOV      r0,sp                 ;345
00034e  f7fffffe          BL       fread
000352  ea5f0a00          MOVS     r10,r0                ;345
000356  d1ef              BNE      |L1.824|
000358  4648              MOV      r0,r9                 ;349
00035a  f7fffffe          BL       fclose
00035e  2e01              CMP      r6,#1                 ;351
000360  d11c              BNE      |L1.924|
000362  a189              ADR      r1,|L1.1416|
000364  4628              MOV      r0,r5                 ;352
000366  f7fffffe          BL       fopen
00036a  0006              MOVS     r6,r0                 ;352
00036c  d10b              BNE      |L1.902|
00036e  4629              MOV      r1,r5                 ;354
000370  a0ba              ADR      r0,|L1.1628|
000372  f7fffffe          BL       __2printf
000376  e011              B        |L1.924|
                  |L1.888|
000378  4602              MOV      r2,r0                 ;358
00037a  4643              MOV      r3,r8                 ;358
00037c  2101              MOVS     r1,#1                 ;358
00037e  4668              MOV      r0,sp                 ;358
000380  f7fffffe          BL       fwrite
000384  442c              ADD      r4,r4,r5              ;359
                  |L1.902|
000386  4633              MOV      r3,r6                 ;357
000388  463a              MOV      r2,r7                 ;357
00038a  2101              MOVS     r1,#1                 ;357
00038c  4668              MOV      r0,sp                 ;357
00038e  f7fffffe          BL       fread
000392  0005              MOVS     r5,r0                 ;357
000394  d1f0              BNE      |L1.888|
000396  4630              MOV      r0,r6                 ;361
000398  f7fffffe          BL       fclose
                  |L1.924|
00039c  4640              MOV      r0,r8                 ;364
00039e  f7fffffe          BL       fclose
0003a2  4669              MOV      r1,sp                 ;365
0003a4  4620              MOV      r0,r4                 ;365
0003a6  f7fffffe          BL       dot_format
0003aa  4669              MOV      r1,sp                 ;366
0003ac  a0c0              ADR      r0,|L1.1712|
                  |L1.942|
0003ae  f7fffffe          BL       __2printf
0003b2  e7ac              B        |L1.782|
;;;368    
                          ENDP

                  cmd_delete PROC
;;;371     *---------------------------------------------------------------------------*/
;;;372    static void cmd_delete (char *par) {
0003b4  b538              PUSH     {r3-r5,lr}
;;;373      char *fname,*next,dir;
;;;374    
;;;375      fname = get_entry (par, &next);
0003b6  4669              MOV      r1,sp
0003b8  f7fffffe          BL       get_entry
0003bc  0004              MOVS     r4,r0
;;;376      if (fname == NULL) {
0003be  d008              BEQ      |L1.978|
;;;377        printf ("\nFilename missing.\n");
;;;378        return;
;;;379      }
;;;380    
;;;381      dir = 0;
0003c0  2500              MOVS     r5,#0
;;;382      if (*(fname + strlen(fname) - 1) == '\\') {
0003c2  f7fffffe          BL       strlen
0003c6  4420              ADD      r0,r0,r4
0003c8  f8100c01          LDRB     r0,[r0,#-1]
0003cc  285c              CMP      r0,#0x5c
0003ce  d004              BEQ      |L1.986|
0003d0  e004              B        |L1.988|
                  |L1.978|
0003d2  a039              ADR      r0,|L1.1208|
0003d4  f7fffffe          BL       __2printf
;;;383        dir = 1;
;;;384      }
;;;385    
;;;386      if (fdelete (fname) == 0) {
;;;387        if (dir) {
;;;388          printf ("\nDirectory %s deleted.\n",fname);
;;;389        }
;;;390        else {
;;;391          printf ("\nFile %s deleted.\n",fname);
;;;392        }
;;;393      }
;;;394      else {
;;;395        if (dir) {
;;;396          printf ("\nDirectory %s not found or not empty.\n",fname);
;;;397        }
;;;398        else {
;;;399          printf ("\nFile %s not found.\n",fname);
;;;400        }
;;;401      }
;;;402    }
0003d8  bd38              POP      {r3-r5,pc}
                  |L1.986|
0003da  2501              MOVS     r5,#1                 ;383
                  |L1.988|
0003dc  4620              MOV      r0,r4                 ;386
0003de  f7fffffe          BL       fdelete
0003e2  b118              CBZ      r0,|L1.1004|
0003e4  4621              MOV      r1,r4                 ;399
0003e6  b14d              CBZ      r5,|L1.1020|
0003e8  a0b6              ADR      r0,|L1.1732|
0003ea  e004              B        |L1.1014|
                  |L1.1004|
0003ec  4621              MOV      r1,r4                 ;391
0003ee  b10d              CBZ      r5,|L1.1012|
0003f0  a0be              ADR      r0,|L1.1772|
0003f2  e000              B        |L1.1014|
                  |L1.1012|
0003f4  a0c3              ADR      r0,|L1.1796|
                  |L1.1014|
0003f6  f7fffffe          BL       __2printf
0003fa  bd38              POP      {r3-r5,pc}
                  |L1.1020|
0003fc  a0c6              ADR      r0,|L1.1816|
0003fe  e7fa              B        |L1.1014|
;;;403    
                          ENDP

                  cmd_dir PROC
;;;406     *---------------------------------------------------------------------------*/
;;;407    static void cmd_dir (char *par) {
000400  e92d4ff0          PUSH     {r4-r11,lr}
000404  b0d1              SUB      sp,sp,#0x144
;;;408      U32 fsize,files,dirs,i;
;;;409      char temp[32],*mask,*next,ch;
;;;410      FINFO info;
;;;411    
;;;412      mask = get_entry (par, &next);
000406  a94f              ADD      r1,sp,#0x13c
000408  f7fffffe          BL       get_entry
00040c  0005              MOVS     r5,r0
;;;413      if (mask == NULL) {
00040e  d100              BNE      |L1.1042|
;;;414        mask = "*.*";
000410  a5c7              ADR      r5,|L1.1840|
                  |L1.1042|
;;;415      }
;;;416    
;;;417      printf ("\nFile System Directory...");
000412  a0c8              ADR      r0,|L1.1844|
000414  f7fffffe          BL       __2printf
;;;418      files = 0;
000418  2000              MOVS     r0,#0
;;;419      dirs  = 0;
00041a  4680              MOV      r8,r0
;;;420      fsize = 0;
00041c  4683              MOV      r11,r0
;;;421      info.fileID  = 0;
00041e  4681              MOV      r9,r0
000420  904e              STR      r0,[sp,#0x138]
000422  f8ad010c          STRH     r0,[sp,#0x10c]
000426  f10d0a08          ADD      r10,sp,#8             ;410
;;;422      while (ffind (mask,&info) == 0) {
00042a  e1e1              B        |L1.2032|
                  |L1.1068|
;;;423        if (info.attrib & ATTR_DIRECTORY) {
00042c  f89d010e          LDRB     r0,[sp,#0x10e]
000430  06c0              LSLS     r0,r0,#27
000432  d51c              BPL      |L1.1134|
;;;424          i = 0;
000434  2600              MOVS     r6,#0
;;;425          while (strlen((const char *)info.name+i) > 41) {
000436  e00a              B        |L1.1102|
                  |L1.1080|
;;;426            ch = info.name[i+41];
000438  f8947029          LDRB     r7,[r4,#0x29]
;;;427            info.name[i+41] = 0;
00043c  f8849029          STRB     r9,[r4,#0x29]
000440  4621              MOV      r1,r4
;;;428            printf ("\n%-41s", &info.name[i]);
000442  a0c3              ADR      r0,|L1.1872|
000444  f7fffffe          BL       __2printf
;;;429            info.name[i+41] = ch;
000448  f8847029          STRB     r7,[r4,#0x29]
;;;430            i += 41;
00044c  3629              ADDS     r6,r6,#0x29
                  |L1.1102|
00044e  eb0a0006          ADD      r0,r10,r6             ;425
000452  4604              MOV      r4,r0                 ;425
000454  f7fffffe          BL       strlen
000458  2829              CMP      r0,#0x29              ;425
00045a  d8ed              BHI      |L1.1080|
00045c  4621              MOV      r1,r4                 ;425
;;;431          }
;;;432          printf ("\n%-41s    <DIR>       ", &info.name[i]);
00045e  a0be              ADR      r0,|L1.1880|
000460  f7fffffe          BL       __2printf
;;;433          printf ("  %02d.%02d.%04d  %02d:%02d",
000464  f89d3111          LDRB     r3,[sp,#0x111]
000468  f89d2110          LDRB     r2,[sp,#0x110]
00046c  e180              B        |L1.1904|
                  |L1.1134|
00046e  e18d              B        |L1.1932|
                  |L1.1136|
                          DCD      0x3b9aca00
                  |L1.1140|
                          DCD      0x000f4240
                  |L1.1144|
000478  25642e00          DCB      "%d.",0
                  |L1.1148|
00047c  25303364          DCB      "%03d.",0
000480  2e00    
000482  00                DCB      0
000483  00                DCB      0
                  |L1.1156|
000484  25303364          DCB      "%03d.%03d",0
000488  2e253033
00048c  6400    
00048e  00                DCB      0
00048f  00                DCB      0
                  |L1.1168|
000490  25642e25          DCB      "%d.%03d",0
000494  30336400
                  |L1.1176|
000498  256400            DCB      "%d",0
00049b  00                DCB      0
                  |L1.1180|
00049c  2f4100            DCB      "/A",0
00049f  00                DCB      0
                  |L1.1184|
0004a0  2f6100            DCB      "/a",0
0004a3  00                DCB      0
                  |L1.1188|
0004a4  0a436f6d          DCB      "\nCommand error.\n",0
0004a8  6d616e64
0004ac  20657272
0004b0  6f722e0a
0004b4  00      
0004b5  00                DCB      0
0004b6  00                DCB      0
0004b7  00                DCB      0
                  |L1.1208|
0004b8  0a46696c          DCB      "\nFilename missing.\n",0
0004bc  656e616d
0004c0  65206d69
0004c4  7373696e
0004c8  672e0a00
                  |L1.1228|
0004cc  0a417070          DCB      "\nAppend data to file %s",0
0004d0  656e6420
0004d4  64617461
0004d8  20746f20
0004dc  66696c65
0004e0  20257300
                  |L1.1252|
0004e4  0a436170          DCB      "\nCapture data to file %s",0
0004e8  74757265
0004ec  20646174
0004f0  6120746f
0004f4  2066696c
0004f8  65202573
0004fc  00      
0004fd  00                DCB      0
0004fe  00                DCB      0
0004ff  00                DCB      0
                  |L1.1280|
000500  0a507265          DCB      "\nPress ESC to stop.\n",0
000504  73732045
000508  53432074
00050c  6f207374
000510  6f702e0a
000514  00      
000515  00                DCB      0
000516  00                DCB      0
000517  00                DCB      0
                  |L1.1304|
000518  6100              DCB      "a",0
00051a  00                DCB      0
00051b  00                DCB      0
                  |L1.1308|
00051c  7700              DCB      "w",0
00051e  00                DCB      0
00051f  00                DCB      0
                  |L1.1312|
                          DCD      ||.bss||
                  |L1.1316|
000524  0a46696c          DCB      "\nFile closed.\n",0
000528  6520636c
00052c  6f736564
000530  2e0a00  
000533  00                DCB      0
                  |L1.1332|
000534  0a43616e          DCB      "\nCan not open file!\n",0
000538  206e6f74
00053c  206f7065
000540  6e206669
000544  6c65210a
000548  00      
000549  00                DCB      0
00054a  00                DCB      0
00054b  00                DCB      0
                  |L1.1356|
00054c  54686973          DCB      "This is line # %d in file %s\n",0
000550  20697320
000554  6c696e65
000558  20232025
00055c  6420696e
000560  2066696c
000564  65202573
000568  0a00    
00056a  00                DCB      0
00056b  00                DCB      0
                  |L1.1388|
00056c  0a526561          DCB      "\nRead data from file %s\n",0
000570  64206461
000574  74612066
000578  726f6d20
00057c  66696c65
000580  2025730a
000584  00      
000585  00                DCB      0
000586  00                DCB      0
000587  00                DCB      0
                  |L1.1416|
000588  7200              DCB      "r",0
00058a  00                DCB      0
00058b  00                DCB      0
                  |L1.1420|
00058c  0a46696c          DCB      "\nFile not found!\n",0
000590  65206e6f
000594  7420666f
000598  756e6421
00059c  0a00    
00059e  00                DCB      0
00059f  00                DCB      0
                  |L1.1440|
                          DCD      __stdout
                  |L1.1444|
0005a4  0a4e6577          DCB      "\nNew Filename missing.\n",0
0005a8  2046696c
0005ac  656e616d
0005b0  65206d69
0005b4  7373696e
0005b8  672e0a00
                  |L1.1468|
0005bc  0a4e6577          DCB      "\nNew name is the same.\n",0
0005c0  206e616d
0005c4  65206973
0005c8  20746865
0005cc  2073616d
0005d0  652e0a00
                  |L1.1492|
0005d4  0a446972          DCB      "\nDirectory rename error.\n",0
0005d8  6563746f
0005dc  72792072
0005e0  656e616d
0005e4  65206572
0005e8  726f722e
0005ec  0a00    
0005ee  00                DCB      0
0005ef  00                DCB      0
                  |L1.1520|
0005f0  0a446972          DCB      "\nDirectory %s renamed to %s\n",0
0005f4  6563746f
0005f8  72792025
0005fc  73207265
000600  6e616d65
000604  6420746f
000608  2025730a
00060c  00      
00060d  00                DCB      0
00060e  00                DCB      0
00060f  00                DCB      0
                  |L1.1552|
000610  0a46696c          DCB      "\nFile %s renamed to %s\n",0
000614  65202573
000618  2072656e
00061c  616d6564
000620  20746f20
000624  25730a00
                  |L1.1576|
000628  0a46696c          DCB      "\nFile rename error.\n",0
00062c  65207265
000630  6e616d65
000634  20657272
000638  6f722e0a
00063c  00      
00063d  00                DCB      0
00063e  00                DCB      0
00063f  00                DCB      0
                  |L1.1600|
000640  0a436f70          DCB      "\nCopy file %s, %s to %s\n",0
000644  79206669
000648  6c652025
00064c  732c2025
000650  7320746f
000654  2025730a
000658  00      
000659  00                DCB      0
00065a  00                DCB      0
00065b  00                DCB      0
                  |L1.1628|
00065c  0a46696c          DCB      "\nFile %s not found!\n",0
000660  65202573
000664  206e6f74
000668  20666f75
00066c  6e64210a
000670  00      
000671  00                DCB      0
000672  00                DCB      0
000673  00                DCB      0
                  |L1.1652|
000674  0a436f70          DCB      "\nCopy file %s to %s\n",0
000678  79206669
00067c  6c652025
000680  7320746f
000684  2025730a
000688  00      
000689  00                DCB      0
00068a  00                DCB      0
00068b  00                DCB      0
                  |L1.1676|
00068c  0a466169          DCB      "\nFailed to open %s for writing!\n",0
000690  6c656420
000694  746f206f
000698  70656e20
00069c  25732066
0006a0  6f722077
0006a4  72697469
0006a8  6e67210a
0006ac  00      
0006ad  00                DCB      0
0006ae  00                DCB      0
0006af  00                DCB      0
                  |L1.1712|
0006b0  0a257320          DCB      "\n%s bytes copied.\n",0
0006b4  62797465
0006b8  7320636f
0006bc  70696564
0006c0  2e0a00  
0006c3  00                DCB      0
                  |L1.1732|
0006c4  0a446972          DCB      "\nDirectory %s not found or not empty.\n",0
0006c8  6563746f
0006cc  72792025
0006d0  73206e6f
0006d4  7420666f
0006d8  756e6420
0006dc  6f72206e
0006e0  6f742065
0006e4  6d707479
0006e8  2e0a00  
0006eb  00                DCB      0
                  |L1.1772|
0006ec  0a446972          DCB      "\nDirectory %s deleted.\n",0
0006f0  6563746f
0006f4  72792025
0006f8  73206465
0006fc  6c657465
000700  642e0a00
                  |L1.1796|
000704  0a46696c          DCB      "\nFile %s deleted.\n",0
000708  65202573
00070c  2064656c
000710  65746564
000714  2e0a00  
000717  00                DCB      0
                  |L1.1816|
000718  0a46696c          DCB      "\nFile %s not found.\n",0
00071c  65202573
000720  206e6f74
000724  20666f75
000728  6e642e0a
00072c  00      
00072d  00                DCB      0
00072e  00                DCB      0
00072f  00                DCB      0
                  |L1.1840|
000730  2a2e2a00          DCB      "*.*",0
                  |L1.1844|
000734  0a46696c          DCB      "\nFile System Directory...",0
000738  65205379
00073c  7374656d
000740  20446972
000744  6563746f
000748  72792e2e
00074c  2e00    
00074e  00                DCB      0
00074f  00                DCB      0
                  |L1.1872|
000750  0a252d34          DCB      "\n%-41s",0
000754  317300  
000757  00                DCB      0
                  |L1.1880|
000758  0a252d34          DCB      "\n%-41s    <DIR>       ",0
00075c  31732020
000760  20203c44
000764  49523e20
000768  20202020
00076c  202000  
00076f  00                DCB      0
                  |L1.1904|
000770  e9cd2300          STRD     r2,r3,[sp,#0]
000774  f8bd3116          LDRH     r3,[sp,#0x116]
000778  f89d2114          LDRB     r2,[sp,#0x114]
00077c  f89d1113          LDRB     r1,[sp,#0x113]
000780  a0b0              ADR      r0,|L1.2628|
000782  f7fffffe          BL       __2printf
;;;434                   info.time.day, info.time.mon, info.time.year,
;;;435                   info.time.hr, info.time.min);
;;;436          dirs++;
000786  f1080801          ADD      r8,r8,#1
00078a  e031              B        |L1.2032|
                  |L1.1932|
;;;437        }
;;;438        else {
;;;439          dot_format (info.size, &temp[0]);
00078c  a946              ADD      r1,sp,#0x118
00078e  9842              LDR      r0,[sp,#0x108]
000790  f7fffffe          BL       dot_format
;;;440          i = 0;
000794  2600              MOVS     r6,#0
;;;441          while (strlen((const char *)info.name+i) > 41) {
000796  e00b              B        |L1.1968|
                  |L1.1944|
;;;442            ch = info.name[i+41];
000798  f8947029          LDRB     r7,[r4,#0x29]
;;;443            info.name[i+41] = 0;
00079c  f8849029          STRB     r9,[r4,#0x29]
0007a0  4621              MOV      r1,r4
;;;444            printf ("\n%-41s", &info.name[i]);
0007a2  f2af0054          ADR      r0,|L1.1872|
0007a6  f7fffffe          BL       __2printf
;;;445            info.name[i+41] = ch;
0007aa  f8847029          STRB     r7,[r4,#0x29]
;;;446            i += 41;
0007ae  3629              ADDS     r6,r6,#0x29
                  |L1.1968|
0007b0  eb0a0006          ADD      r0,r10,r6             ;441
0007b4  4604              MOV      r4,r0                 ;441
0007b6  f7fffffe          BL       strlen
0007ba  2829              CMP      r0,#0x29              ;441
0007bc  d8ec              BHI      |L1.1944|
;;;447          }
;;;448          printf ("\n%-41s %14s ", &info.name[i], temp);
0007be  aa46              ADD      r2,sp,#0x118
0007c0  4621              MOV      r1,r4
0007c2  a0a7              ADR      r0,|L1.2656|
0007c4  f7fffffe          BL       __2printf
;;;449          printf ("  %02d.%02d.%04d  %02d:%02d",
0007c8  f89d3111          LDRB     r3,[sp,#0x111]
0007cc  f89d2110          LDRB     r2,[sp,#0x110]
0007d0  e9cd2300          STRD     r2,r3,[sp,#0]
0007d4  f8bd3116          LDRH     r3,[sp,#0x116]
0007d8  f89d2114          LDRB     r2,[sp,#0x114]
0007dc  f89d1113          LDRB     r1,[sp,#0x113]
0007e0  a098              ADR      r0,|L1.2628|
0007e2  f7fffffe          BL       __2printf
;;;450                   info.time.day, info.time.mon, info.time.year,
;;;451                   info.time.hr, info.time.min);
;;;452          fsize += info.size;
;;;453          files++;
0007e6  984e              LDR      r0,[sp,#0x138]
0007e8  9942              LDR      r1,[sp,#0x108]        ;452
0007ea  1c40              ADDS     r0,r0,#1
0007ec  448b              ADD      r11,r11,r1            ;452
0007ee  904e              STR      r0,[sp,#0x138]
                  |L1.2032|
0007f0  a902              ADD      r1,sp,#8              ;422
0007f2  4628              MOV      r0,r5                 ;422
0007f4  f7fffffe          BL       ffind
0007f8  2800              CMP      r0,#0                 ;422
0007fa  f43fae17          BEQ      |L1.1068|
;;;454        }
;;;455      }
;;;456      if (info.fileID == 0) {
0007fe  f8bd010c          LDRH     r0,[sp,#0x10c]
000802  b1c8              CBZ      r0,|L1.2104|
;;;457        printf ("\nNo files...");
;;;458      }
;;;459      else {
;;;460        dot_format (fsize, &temp[0]);
000804  a946              ADD      r1,sp,#0x118
000806  4658              MOV      r0,r11
000808  f7fffffe          BL       dot_format
;;;461        printf ("\n              %9d File(s)    %21s bytes", files, temp);
00080c  aa46              ADD      r2,sp,#0x118
00080e  a098              ADR      r0,|L1.2672|
000810  994e              LDR      r1,[sp,#0x138]
000812  f7fffffe          BL       __2printf
                  |L1.2070|
;;;462      }
;;;463      dot_format (ffree(""), &temp[0]);
000816  a095              ADR      r0,|L1.2668|
000818  f7fffffe          BL       ffree
00081c  a946              ADD      r1,sp,#0x118
00081e  f7fffffe          BL       dot_format
;;;464      if (dirs) {
000822  ea5f0008          MOVS     r0,r8
000826  d00b              BEQ      |L1.2112|
;;;465        printf ("\n              %9d Dir(s)     %21s bytes free.\n", dirs, temp);
000828  4601              MOV      r1,r0
00082a  aa46              ADD      r2,sp,#0x118
00082c  a09b              ADR      r0,|L1.2716|
00082e  f7fffffe          BL       __2printf
                  |L1.2098|
;;;466      }
;;;467      else {
;;;468        printf ("\n%56s bytes free.\n",temp);
;;;469      }
;;;470    }
000832  b051              ADD      sp,sp,#0x144
000834  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2104|
000838  a0a4              ADR      r0,|L1.2764|
00083a  f7fffffe          BL       __2printf
00083e  e7ea              B        |L1.2070|
                  |L1.2112|
000840  a946              ADD      r1,sp,#0x118          ;468
000842  a0a6              ADR      r0,|L1.2780|
000844  f7fffffe          BL       __2printf
000848  e7f3              B        |L1.2098|
;;;471    
                          ENDP

                  cmd_format PROC
;;;474     *---------------------------------------------------------------------------*/
;;;475    static void cmd_format (char *par) {
00084a  b530              PUSH     {r4,r5,lr}
00084c  b087              SUB      sp,sp,#0x1c
;;;476      char *label,*next,*opt;
;;;477      char arg[20];
;;;478      U32 retv;
;;;479    
;;;480      label = get_entry (par, &next);
00084e  a905              ADD      r1,sp,#0x14
000850  f7fffffe          BL       get_entry
000854  0004              MOVS     r4,r0
;;;481      if (label == NULL) {
000856  d100              BNE      |L1.2138|
;;;482        label = "KEIL";
000858  a4a5              ADR      r4,|L1.2800|
                  |L1.2138|
;;;483      }
;;;484      strcpy (arg, label);
00085a  4621              MOV      r1,r4
00085c  4668              MOV      r0,sp
00085e  f7fffffe          BL       strcpy
;;;485      opt = get_entry (next, &next);
000862  a905              ADD      r1,sp,#0x14
000864  9805              LDR      r0,[sp,#0x14]
000866  f7fffffe          BL       get_entry
00086a  0005              MOVS     r5,r0
;;;486      if (opt != NULL) {
00086c  d00c              BEQ      |L1.2184|
;;;487        if ((strcmp (opt, "/FAT32") == 0) ||(strcmp (opt, "/fat32") == 0)) {
00086e  a1a2              ADR      r1,|L1.2808|
000870  f7fffffe          BL       strcmp
000874  b120              CBZ      r0,|L1.2176|
000876  a1a2              ADR      r1,|L1.2816|
000878  4628              MOV      r0,r5
00087a  f7fffffe          BL       strcmp
00087e  b918              CBNZ     r0,|L1.2184|
                  |L1.2176|
;;;488          strcat (arg, "/FAT32");
000880  a19d              ADR      r1,|L1.2808|
000882  4668              MOV      r0,sp
000884  f7fffffe          BL       strcat
                  |L1.2184|
;;;489        }
;;;490      }
;;;491      printf ("\nFormat Flash Memory Card? [Y/N]\n");
000888  a09f              ADR      r0,|L1.2824|
00088a  f7fffffe          BL       __2printf
;;;492      retv = getkey();
00088e  f7fffffe          BL       getkey
;;;493      if (retv == 'y' || retv == 'Y') {
000892  2879              CMP      r0,#0x79
000894  d001              BEQ      |L1.2202|
000896  2859              CMP      r0,#0x59
000898  d106              BNE      |L1.2216|
                  |L1.2202|
;;;494        /* Format the Card with Label "KEIL". "*/
;;;495        if (fformat (arg) == 0) {
00089a  4668              MOV      r0,sp
00089c  f7fffffe          BL       fformat
0008a0  b120              CBZ      r0,|L1.2220|
;;;496          printf ("Memory Card Formatted.\n");
;;;497          printf ("Card Label is %s\n",label);
;;;498        }
;;;499        else {
;;;500          printf ("Formatting failed.\n");
0008a2  a0a2              ADR      r0,|L1.2860|
0008a4  f7fffffe          BL       __2printf
                  |L1.2216|
;;;501        }
;;;502      }
;;;503    }
0008a8  b007              ADD      sp,sp,#0x1c
0008aa  bd30              POP      {r4,r5,pc}
                  |L1.2220|
0008ac  a0a4              ADR      r0,|L1.2880|
0008ae  f7fffffe          BL       __2printf
0008b2  4621              MOV      r1,r4                 ;497
0008b4  a0a8              ADR      r0,|L1.2904|
0008b6  f7fffffe          BL       __2printf
0008ba  e7f5              B        |L1.2216|
;;;504    
                          ENDP

                  cmd_help PROC
;;;507     *---------------------------------------------------------------------------*/
;;;508    static void cmd_help (char *par) {
0008bc  48ab              LDR      r0,|L1.2924|
;;;509      printf (help);
0008be  f7ffbffe          B.W      __2printf
;;;510    }
;;;511    
                          ENDP

                  init_card PROC
;;;514     *---------------------------------------------------------------------------*/
;;;515    static void init_card (void) {
0008c2  b500              PUSH     {lr}
0008c4  b08b              SUB      sp,sp,#0x2c
;;;516      U32 retv;
;;;517      MMCFG SDCardCfg;
;;;518      char outBuf[26];
;;;519    
;;;520      GLCD_SetBackColor (White);
0008c6  f64f70ff          MOV      r0,#0xffff
0008ca  f7fffffe          BL       GLCD_SetBackColor
;;;521      GLCD_SetTextColor (Blue);
0008ce  201f              MOVS     r0,#0x1f
0008d0  f7fffffe          BL       GLCD_SetTextColor
;;;522      GLCD_ClearLn (5);
0008d4  2005              MOVS     r0,#5
0008d6  f7fffffe          BL       GLCD_ClearLn
;;;523      GLCD_ClearLn (6);
0008da  2006              MOVS     r0,#6
0008dc  f7fffffe          BL       GLCD_ClearLn
;;;524      GLCD_ClearLn (7);
0008e0  2007              MOVS     r0,#7
0008e2  f7fffffe          BL       GLCD_ClearLn
;;;525      GLCD_ClearLn (8);
0008e6  2008              MOVS     r0,#8
0008e8  f7fffffe          BL       GLCD_ClearLn
;;;526    
;;;527      while ((retv = finit ()) != 0) {            /* Wait until the Card is ready*/
0008ec  e00b              B        |L1.2310|
                  |L1.2286|
;;;528        if (retv == 1) {
0008ee  2801              CMP      r0,#1
0008f0  d03f              BEQ      |L1.2418|
;;;529          printf ("\nSD/MMC Init Failed");
;;;530          printf ("\nInsert Memory card and press key...\n");
;;;531          getkey ();
;;;532        }
;;;533        else {
;;;534          printf ("\nSD/MMC Card is Unformatted");
0008f2  a09f              ADR      r0,|L1.2928|
0008f4  f7fffffe          BL       __2printf
;;;535          strcpy (&in_line[0], "KEIL\r\n");
0008f8  a1a4              ADR      r1,|L1.2956|
0008fa  48a6              LDR      r0,|L1.2964|
0008fc  f7fffffe          BL       strcpy
;;;536          cmd_format (&in_line[0]);
000900  48a4              LDR      r0,|L1.2964|
000902  f7fffffe          BL       cmd_format
                  |L1.2310|
000906  f7fffffe          BL       finit
00090a  2800              CMP      r0,#0                 ;527
00090c  d1ef              BNE      |L1.2286|
;;;537        }
;;;538      }
;;;539    
;;;540      mmc_read_config (&SDCardCfg);
00090e  a807              ADD      r0,sp,#0x1c
000910  f7fffffe          BL       mmc_read_config
;;;541    
;;;542      outBuf[0] = 0;
000914  2000              MOVS     r0,#0
000916  f88d0000          STRB     r0,[sp,#0]
;;;543      sprintf (&outBuf[0], " SerNr:  0x%08X", SDCardCfg.sernum);
00091a  a19f              ADR      r1,|L1.2968|
00091c  4668              MOV      r0,sp
00091e  9a07              LDR      r2,[sp,#0x1c]
000920  f7fffffe          BL       __2sprintf
;;;544      GLCD_DisplayString (5, 0, (unsigned char *)outBuf);
000924  466a              MOV      r2,sp
000926  2100              MOVS     r1,#0
000928  2005              MOVS     r0,#5
00092a  f7fffffe          BL       GLCD_DisplayString
;;;545      sprintf (&outBuf[0], " BlockNr:0x%08X", SDCardCfg.blocknr);
00092e  a19e              ADR      r1,|L1.2984|
000930  4668              MOV      r0,sp
000932  9a08              LDR      r2,[sp,#0x20]
000934  f7fffffe          BL       __2sprintf
;;;546      GLCD_DisplayString (6, 0, (unsigned char *)outBuf);
000938  466a              MOV      r2,sp
00093a  2100              MOVS     r1,#0
00093c  2006              MOVS     r0,#6
00093e  f7fffffe          BL       GLCD_DisplayString
;;;547      sprintf (&outBuf[0], " RdLen:  0x%04X", SDCardCfg.read_blen);
000942  f8bd2024          LDRH     r2,[sp,#0x24]
000946  a19c              ADR      r1,|L1.3000|
000948  4668              MOV      r0,sp
00094a  f7fffffe          BL       __2sprintf
;;;548      GLCD_DisplayString (7, 0, (unsigned char *)outBuf);
00094e  466a              MOV      r2,sp
000950  2100              MOVS     r1,#0
000952  2007              MOVS     r0,#7
000954  f7fffffe          BL       GLCD_DisplayString
;;;549      sprintf(&outBuf[0], " WrLen:  0x%04X", SDCardCfg.write_blen);
000958  f8bd2026          LDRH     r2,[sp,#0x26]
00095c  a19a              ADR      r1,|L1.3016|
00095e  4668              MOV      r0,sp
000960  f7fffffe          BL       __2sprintf
;;;550      GLCD_DisplayString (8, 0, (unsigned char *)outBuf);
000964  466a              MOV      r2,sp
000966  2100              MOVS     r1,#0
000968  2008              MOVS     r0,#8
00096a  f7fffffe          BL       GLCD_DisplayString
;;;551    }
00096e  b00b              ADD      sp,sp,#0x2c
000970  bd00              POP      {pc}
                  |L1.2418|
000972  a099              ADR      r0,|L1.3032|
000974  f7fffffe          BL       __2printf
000978  a09c              ADR      r0,|L1.3052|
00097a  f7fffffe          BL       __2printf
00097e  f7fffffe          BL       getkey
000982  e7c0              B        |L1.2310|
;;;552    
                          ENDP

                  main PROC
;;;555     *---------------------------------------------------------------------------*/
;;;556    int main (void) {
000984  b508              PUSH     {r3,lr}
;;;557      char *sp,*cp,*next;
;;;558      U32 i;
;;;559    
;;;560      SystemInit();                               /* initialize clocks           */
000986  f7fffffe          BL       SystemInit
00098a  f7fffffe          BL       GLCD_Init
00098e  f64f70ff          MOV      r0,#0xffff
000992  f7fffffe          BL       GLCD_Clear
000996  201f              MOVS     r0,#0x1f
000998  f7fffffe          BL       GLCD_SetTextColor
00099c  a29d              ADR      r2,|L1.3092|
00099e  2102              MOVS     r1,#2
0009a0  2001              MOVS     r0,#1
0009a2  f7fffffe          BL       GLCD_DisplayString
0009a6  2102              MOVS     r1,#2
0009a8  a29d              ADR      r2,|L1.3104|
0009aa  4608              MOV      r0,r1
0009ac  f7fffffe          BL       GLCD_DisplayString
;;;561      init_display();                             /* initialize the display      */
;;;562      SER_init (0);                               /* initialize serial interface */
0009b0  2000              MOVS     r0,#0
0009b2  f7fffffe          BL       SER_init
;;;563    
;;;564      printf (intro);                             /* display example info        */
0009b6  486d              LDR      r0,|L1.2924|
0009b8  389d              SUBS     r0,r0,#0x9d
0009ba  f7fffffe          BL       __2printf
;;;565      printf (help);
0009be  486b              LDR      r0,|L1.2924|
0009c0  f7fffffe          BL       __2printf
;;;566    
;;;567      init_card ();
0009c4  f7fffffe          BL       init_card
;;;568      while (1) {
;;;569        printf ("\nCmd> ");                       /* display prompt              */
;;;570        fflush (stdout);
;;;571                                                  /* get command line input      */
;;;572        if (getline (in_line, sizeof (in_line)) == __FALSE) {
;;;573          continue;
;;;574        }
;;;575    
;;;576        sp = get_entry (&in_line[0], &next);
;;;577        if (*sp == 0) {
;;;578          continue;
;;;579        }
;;;580        for (cp = sp; *cp && *cp != ' '; cp++) {
;;;581          *cp = toupper (*cp);                    /* command to upper-case       */
;;;582        }
;;;583        for (i = 0; i < CMD_COUNT; i++) {
;;;584          if (strcmp (sp, (const char *)&cmd[i].val)) {
0009c8  4f99              LDR      r7,|L1.3120|
                  |L1.2506|
0009ca  a09a              ADR      r0,|L1.3124|
0009cc  f7fffffe          BL       __2printf
0009d0  489a              LDR      r0,|L1.3132|
0009d2  f7fffffe          BL       fflush
0009d6  21a0              MOVS     r1,#0xa0              ;572
0009d8  486e              LDR      r0,|L1.2964|
0009da  f7fffffe          BL       getline
0009de  2800              CMP      r0,#0                 ;572
0009e0  d0f3              BEQ      |L1.2506|
0009e2  4669              MOV      r1,sp                 ;576
0009e4  486b              LDR      r0,|L1.2964|
0009e6  f7fffffe          BL       get_entry
0009ea  4606              MOV      r6,r0                 ;576
0009ec  7800              LDRB     r0,[r0,#0]            ;577
0009ee  2800              CMP      r0,#0                 ;577
0009f0  d0eb              BEQ      |L1.2506|
0009f2  4635              MOV      r5,r6                 ;580
0009f4  e004              B        |L1.2560|
0009f6  bf00              NOP                            ;581
                  |L1.2552|
0009f8  f7fffffe          BL       toupper
0009fc  f8050b01          STRB     r0,[r5],#1            ;581
                  |L1.2560|
000a00  7828              LDRB     r0,[r5,#0]            ;580
000a02  b108              CBZ      r0,|L1.2568|
000a04  2820              CMP      r0,#0x20              ;580
000a06  d1f7              BNE      |L1.2552|
                  |L1.2568|
000a08  f05f0400          MOVS.W   r4,#0                 ;583
                  |L1.2572|
000a0c  eb040044          ADD      r0,r4,r4,LSL #1
000a10  eb070180          ADD      r1,r7,r0,LSL #2
000a14  4630              MOV      r0,r6
000a16  f7fffffe          BL       strcmp
000a1a  b140              CBZ      r0,|L1.2606|
000a1c  1c64              ADDS     r4,r4,#1              ;583
000a1e  2c0a              CMP      r4,#0xa               ;583
000a20  d3f4              BCC      |L1.2572|
                  |L1.2594|
;;;585            continue;
;;;586          }
;;;587          init_card();                            /* check if card is removed    */
;;;588          cmd[i].func (next);                     /* execute command function    */
;;;589          break;
;;;590        }
;;;591        if (i == CMD_COUNT) {
000a22  2c0a              CMP      r4,#0xa
000a24  d1d1              BNE      |L1.2506|
;;;592          printf ("\nCommand error\n");
000a26  a086              ADR      r0,|L1.3136|
000a28  f7fffffe          BL       __2printf
000a2c  e7cd              B        |L1.2506|
                  |L1.2606|
000a2e  f7fffffe          BL       init_card
000a32  eb040044          ADD      r0,r4,r4,LSL #1       ;588
000a36  eb070080          ADD      r0,r7,r0,LSL #2       ;588
000a3a  6881              LDR      r1,[r0,#8]            ;588
000a3c  9800              LDR      r0,[sp,#0]            ;588
000a3e  4788              BLX      r1                    ;588
000a40  e7ef              B        |L1.2594|
;;;593        }
;;;594      }
;;;595    }
;;;596    
                          ENDP

000a42  0000              DCW      0x0000
                  |L1.2628|
000a44  20202530          DCB      "  %02d.%02d.%04d  %02d:%02d",0
000a48  32642e25
000a4c  3032642e
000a50  25303464
000a54  20202530
000a58  32643a25
000a5c  30326400
                  |L1.2656|
000a60  0a252d34          DCB      "\n%-41s %14s "
000a64  31732025
000a68  31347320
                  |L1.2668|
000a6c  00                DCB      0
000a6d  00                DCB      0
000a6e  00                DCB      0
000a6f  00                DCB      0
                  |L1.2672|
000a70  0a202020          DCB      "\n              %9d File(s)    %21s bytes",0
000a74  20202020
000a78  20202020
000a7c  20202025
000a80  39642046
000a84  696c6528
000a88  73292020
000a8c  20202532
000a90  31732062
000a94  79746573
000a98  00      
000a99  00                DCB      0
000a9a  00                DCB      0
000a9b  00                DCB      0
                  |L1.2716|
000a9c  0a202020          DCB      "\n              %9d Dir(s)     %21s bytes free.\n",0
000aa0  20202020
000aa4  20202020
000aa8  20202025
000aac  39642044
000ab0  69722873
000ab4  29202020
000ab8  20202532
000abc  31732062
000ac0  79746573
000ac4  20667265
000ac8  652e0a00
                  |L1.2764|
000acc  0a4e6f20          DCB      "\nNo files...",0
000ad0  66696c65
000ad4  732e2e2e
000ad8  00      
000ad9  00                DCB      0
000ada  00                DCB      0
000adb  00                DCB      0
                  |L1.2780|
000adc  0a253536          DCB      "\n%56s bytes free.\n",0
000ae0  73206279
000ae4  74657320
000ae8  66726565
000aec  2e0a00  
000aef  00                DCB      0
                  |L1.2800|
000af0  4b45494c          DCB      "KEIL",0
000af4  00      
000af5  00                DCB      0
000af6  00                DCB      0
000af7  00                DCB      0
                  |L1.2808|
000af8  2f464154          DCB      "/FAT32",0
000afc  333200  
000aff  00                DCB      0
                  |L1.2816|
000b00  2f666174          DCB      "/fat32",0
000b04  333200  
000b07  00                DCB      0
                  |L1.2824|
000b08  0a466f72          DCB      "\nFormat Flash Memory Card? [Y/N]\n",0
000b0c  6d617420
000b10  466c6173
000b14  68204d65
000b18  6d6f7279
000b1c  20436172
000b20  643f205b
000b24  592f4e5d
000b28  0a00    
000b2a  00                DCB      0
000b2b  00                DCB      0
                  |L1.2860|
000b2c  466f726d          DCB      "Formatting failed.\n",0
000b30  61747469
000b34  6e672066
000b38  61696c65
000b3c  642e0a00
                  |L1.2880|
000b40  4d656d6f          DCB      "Memory Card Formatted.\n",0
000b44  72792043
000b48  61726420
000b4c  466f726d
000b50  61747465
000b54  642e0a00
                  |L1.2904|
000b58  43617264          DCB      "Card Label is %s\n",0
000b5c  204c6162
000b60  656c2069
000b64  73202573
000b68  0a00    
000b6a  00                DCB      0
000b6b  00                DCB      0
                  |L1.2924|
                          DCD      ||.constdata||+0x9d
                  |L1.2928|
000b70  0a53442f          DCB      "\nSD/MMC Card is Unformatted",0
000b74  4d4d4320
000b78  43617264
000b7c  20697320
000b80  556e666f
000b84  726d6174
000b88  74656400
                  |L1.2956|
000b8c  4b45494c          DCB      "KEIL\r\n",0
000b90  0d0a00  
000b93  00                DCB      0
                  |L1.2964|
                          DCD      ||.bss||
                  |L1.2968|
000b98  20536572          DCB      " SerNr:  0x%08X",0
000b9c  4e723a20
000ba0  20307825
000ba4  30385800
                  |L1.2984|
000ba8  20426c6f          DCB      " BlockNr:0x%08X",0
000bac  636b4e72
000bb0  3a307825
000bb4  30385800
                  |L1.3000|
000bb8  2052644c          DCB      " RdLen:  0x%04X",0
000bbc  656e3a20
000bc0  20307825
000bc4  30345800
                  |L1.3016|
000bc8  2057724c          DCB      " WrLen:  0x%04X",0
000bcc  656e3a20
000bd0  20307825
000bd4  30345800
                  |L1.3032|
000bd8  0a53442f          DCB      "\nSD/MMC Init Failed",0
000bdc  4d4d4320
000be0  496e6974
000be4  20466169
000be8  6c656400
                  |L1.3052|
000bec  0a496e73          DCB      "\nInsert Memory card and press key...\n",0
000bf0  65727420
000bf4  4d656d6f
000bf8  72792063
000bfc  61726420
000c00  616e6420
000c04  70726573
000c08  73206b65
000c0c  792e2e2e
000c10  0a00    
000c12  00                DCB      0
000c13  00                DCB      0
                  |L1.3092|
000c14  20202020          DCB      "     RL-ARM",0
000c18  20524c2d
000c1c  41524d00
                  |L1.3104|
000c20  53445f46          DCB      "SD_File example",0
000c24  696c6520
000c28  6578616d
000c2c  706c6500
                  |L1.3120|
                          DCD      ||.constdata||+0x4f4
                  |L1.3124|
000c34  0a436d64          DCB      "\nCmd> ",0
000c38  3e2000  
000c3b  00                DCB      0
                  |L1.3132|
                          DCD      __stdout
                  |L1.3136|
000c40  0a436f6d          DCB      "\nCommand error\n",0
000c44  6d616e64
000c48  20657272
000c4c  6f720a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  in_line
                          %        160

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  intro
000000  0a0a0a0a          DCB      0x0a,0x0a,0x0a,0x0a
000004  0a0a0a0a          DCB      0x0a,0x0a,0x0a,0x0a
000008  2b2d2d2d          DCB      0x2b,0x2d,0x2d,0x2d
00000c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000010  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000014  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000018  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00001c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000020  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000024  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000028  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00002c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000030  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000034  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000038  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00003c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000040  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000044  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000048  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
00004c  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
000050  2b0a7c20          DCB      0x2b,0x0a,0x7c,0x20
000054  20202020          DCB      0x20,0x20,0x20,0x20
000058  20202020          DCB      0x20,0x20,0x20,0x20
00005c  20202020          DCB      0x20,0x20,0x20,0x20
000060  20202053          DCB      0x20,0x20,0x20,0x53
000064  442f4d4d          DCB      0x44,0x2f,0x4d,0x4d
000068  43204361          DCB      0x43,0x20,0x43,0x61
00006c  72642046          DCB      0x72,0x64,0x20,0x46
000070  696c6520          DCB      0x69,0x6c,0x65,0x20
000074  4d616e69          DCB      0x4d,0x61,0x6e,0x69
000078  70756c61          DCB      0x70,0x75,0x6c,0x61
00007c  74696f6e          DCB      0x74,0x69,0x6f,0x6e
000080  20657861          DCB      0x20,0x65,0x78,0x61
000084  6d706c65          DCB      0x6d,0x70,0x6c,0x65
000088  20202020          DCB      0x20,0x20,0x20,0x20
00008c  20202020          DCB      0x20,0x20,0x20,0x20
000090  20202020          DCB      0x20,0x20,0x20,0x20
000094  20202020          DCB      0x20,0x20,0x20,0x20
000098  20207c0a          DCB      0x20,0x20,0x7c,0x0a
00009c  00                DCB      0x00
                  help
00009d  2b2063            DCB      0x2b,0x20,0x63
0000a0  6f6d6d61          DCB      0x6f,0x6d,0x6d,0x61
0000a4  6e64202d          DCB      0x6e,0x64,0x20,0x2d
0000a8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000ac  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000b0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000b4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000b8  2d2b2066          DCB      0x2d,0x2b,0x20,0x66
0000bc  756e6374          DCB      0x75,0x6e,0x63,0x74
0000c0  696f6e20          DCB      0x69,0x6f,0x6e,0x20
0000c4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000c8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000cc  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000d0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000d4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000d8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000dc  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000e0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0000e4  2d2b0a7c          DCB      0x2d,0x2b,0x0a,0x7c
0000e8  20434150          DCB      0x20,0x43,0x41,0x50
0000ec  2022666e          DCB      0x20,0x22,0x66,0x6e
0000f0  616d6522          DCB      0x61,0x6d,0x65,0x22
0000f4  205b2f41          DCB      0x20,0x5b,0x2f,0x41
0000f8  5d202020          DCB      0x5d,0x20,0x20,0x20
0000fc  20202020          DCB      0x20,0x20,0x20,0x20
000100  2020207c          DCB      0x20,0x20,0x20,0x7c
000104  20636170          DCB      0x20,0x63,0x61,0x70
000108  74757265          DCB      0x74,0x75,0x72,0x65
00010c  73207365          DCB      0x73,0x20,0x73,0x65
000110  7269616c          DCB      0x72,0x69,0x61,0x6c
000114  20646174          DCB      0x20,0x64,0x61,0x74
000118  6120746f          DCB      0x61,0x20,0x74,0x6f
00011c  20612066          DCB      0x20,0x61,0x20,0x66
000120  696c6520          DCB      0x69,0x6c,0x65,0x20
000124  20202020          DCB      0x20,0x20,0x20,0x20
000128  20202020          DCB      0x20,0x20,0x20,0x20
00012c  2020207c          DCB      0x20,0x20,0x20,0x7c
000130  0a7c2020          DCB      0x0a,0x7c,0x20,0x20
000134  20202020          DCB      0x20,0x20,0x20,0x20
000138  20202020          DCB      0x20,0x20,0x20,0x20
00013c  20202020          DCB      0x20,0x20,0x20,0x20
000140  20202020          DCB      0x20,0x20,0x20,0x20
000144  20202020          DCB      0x20,0x20,0x20,0x20
000148  20202020          DCB      0x20,0x20,0x20,0x20
00014c  207c2020          DCB      0x20,0x7c,0x20,0x20
000150  5b2f4120          DCB      0x5b,0x2f,0x41,0x20
000154  6f707469          DCB      0x6f,0x70,0x74,0x69
000158  6f6e2061          DCB      0x6f,0x6e,0x20,0x61
00015c  7070656e          DCB      0x70,0x70,0x65,0x6e
000160  64732064          DCB      0x64,0x73,0x20,0x64
000164  61746120          DCB      0x61,0x74,0x61,0x20
000168  746f2061          DCB      0x74,0x6f,0x20,0x61
00016c  2066696c          DCB      0x20,0x66,0x69,0x6c
000170  655d2020          DCB      0x65,0x5d,0x20,0x20
000174  20202020          DCB      0x20,0x20,0x20,0x20
000178  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
00017c  2046494c          DCB      0x20,0x46,0x49,0x4c
000180  4c202266          DCB      0x4c,0x20,0x22,0x66
000184  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000188  22205b6e          DCB      0x22,0x20,0x5b,0x6e
00018c  6e6e6e5d          DCB      0x6e,0x6e,0x6e,0x5d
000190  20202020          DCB      0x20,0x20,0x20,0x20
000194  2020207c          DCB      0x20,0x20,0x20,0x7c
000198  20637265          DCB      0x20,0x63,0x72,0x65
00019c  61746520          DCB      0x61,0x74,0x65,0x20
0001a0  61206669          DCB      0x61,0x20,0x66,0x69
0001a4  6c652066          DCB      0x6c,0x65,0x20,0x66
0001a8  696c6c65          DCB      0x69,0x6c,0x6c,0x65
0001ac  64207769          DCB      0x64,0x20,0x77,0x69
0001b0  74682074          DCB      0x74,0x68,0x20,0x74
0001b4  65787420          DCB      0x65,0x78,0x74,0x20
0001b8  20202020          DCB      0x20,0x20,0x20,0x20
0001bc  20202020          DCB      0x20,0x20,0x20,0x20
0001c0  2020207c          DCB      0x20,0x20,0x20,0x7c
0001c4  0a7c2020          DCB      0x0a,0x7c,0x20,0x20
0001c8  20202020          DCB      0x20,0x20,0x20,0x20
0001cc  20202020          DCB      0x20,0x20,0x20,0x20
0001d0  20202020          DCB      0x20,0x20,0x20,0x20
0001d4  20202020          DCB      0x20,0x20,0x20,0x20
0001d8  20202020          DCB      0x20,0x20,0x20,0x20
0001dc  20202020          DCB      0x20,0x20,0x20,0x20
0001e0  207c2020          DCB      0x20,0x7c,0x20,0x20
0001e4  5b6e6e6e          DCB      0x5b,0x6e,0x6e,0x6e
0001e8  6e202d20          DCB      0x6e,0x20,0x2d,0x20
0001ec  6e756d62          DCB      0x6e,0x75,0x6d,0x62
0001f0  6572206f          DCB      0x65,0x72,0x20,0x6f
0001f4  66206c69          DCB      0x66,0x20,0x6c,0x69
0001f8  6e65732c          DCB      0x6e,0x65,0x73,0x2c
0001fc  20646566          DCB      0x20,0x64,0x65,0x66
000200  61756c74          DCB      0x61,0x75,0x6c,0x74
000204  3d313030          DCB      0x3d,0x31,0x30,0x30
000208  305d2020          DCB      0x30,0x5d,0x20,0x20
00020c  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
000210  20545950          DCB      0x20,0x54,0x59,0x50
000214  45202266          DCB      0x45,0x20,0x22,0x66
000218  6e616d65          DCB      0x6e,0x61,0x6d,0x65
00021c  22202020          DCB      0x22,0x20,0x20,0x20
000220  20202020          DCB      0x20,0x20,0x20,0x20
000224  20202020          DCB      0x20,0x20,0x20,0x20
000228  2020207c          DCB      0x20,0x20,0x20,0x7c
00022c  20646973          DCB      0x20,0x64,0x69,0x73
000230  706c6179          DCB      0x70,0x6c,0x61,0x79
000234  73207468          DCB      0x73,0x20,0x74,0x68
000238  6520636f          DCB      0x65,0x20,0x63,0x6f
00023c  6e74656e          DCB      0x6e,0x74,0x65,0x6e
000240  74206f66          DCB      0x74,0x20,0x6f,0x66
000244  20612074          DCB      0x20,0x61,0x20,0x74
000248  65787420          DCB      0x65,0x78,0x74,0x20
00024c  66696c65          DCB      0x66,0x69,0x6c,0x65
000250  20202020          DCB      0x20,0x20,0x20,0x20
000254  2020207c          DCB      0x20,0x20,0x20,0x7c
000258  0a7c2052          DCB      0x0a,0x7c,0x20,0x52
00025c  454e2022          DCB      0x45,0x4e,0x20,0x22
000260  666e616d          DCB      0x66,0x6e,0x61,0x6d
000264  65312220          DCB      0x65,0x31,0x22,0x20
000268  22666e61          DCB      0x22,0x66,0x6e,0x61
00026c  6d653222          DCB      0x6d,0x65,0x32,0x22
000270  20202020          DCB      0x20,0x20,0x20,0x20
000274  207c2072          DCB      0x20,0x7c,0x20,0x72
000278  656e616d          DCB      0x65,0x6e,0x61,0x6d
00027c  65732061          DCB      0x65,0x73,0x20,0x61
000280  2066696c          DCB      0x20,0x66,0x69,0x6c
000284  65202766          DCB      0x65,0x20,0x27,0x66
000288  6e616d65          DCB      0x6e,0x61,0x6d,0x65
00028c  31272074          DCB      0x31,0x27,0x20,0x74
000290  6f202766          DCB      0x6f,0x20,0x27,0x66
000294  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000298  32272020          DCB      0x32,0x27,0x20,0x20
00029c  20202020          DCB      0x20,0x20,0x20,0x20
0002a0  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
0002a4  20434f50          DCB      0x20,0x43,0x4f,0x50
0002a8  59202266          DCB      0x59,0x20,0x22,0x66
0002ac  696e2220          DCB      0x69,0x6e,0x22,0x20
0002b0  5b226669          DCB      0x5b,0x22,0x66,0x69
0002b4  6e32225d          DCB      0x6e,0x32,0x22,0x5d
0002b8  2022666f          DCB      0x20,0x22,0x66,0x6f
0002bc  7574227c          DCB      0x75,0x74,0x22,0x7c
0002c0  20636f70          DCB      0x20,0x63,0x6f,0x70
0002c4  69657320          DCB      0x69,0x65,0x73,0x20
0002c8  61206669          DCB      0x61,0x20,0x66,0x69
0002cc  6c652027          DCB      0x6c,0x65,0x20,0x27
0002d0  66696e27          DCB      0x66,0x69,0x6e,0x27
0002d4  20746f20          DCB      0x20,0x74,0x6f,0x20
0002d8  27666f75          DCB      0x27,0x66,0x6f,0x75
0002dc  74272066          DCB      0x74,0x27,0x20,0x66
0002e0  696c6520          DCB      0x69,0x6c,0x65,0x20
0002e4  20202020          DCB      0x20,0x20,0x20,0x20
0002e8  2020207c          DCB      0x20,0x20,0x20,0x7c
0002ec  0a7c2020          DCB      0x0a,0x7c,0x20,0x20
0002f0  20202020          DCB      0x20,0x20,0x20,0x20
0002f4  20202020          DCB      0x20,0x20,0x20,0x20
0002f8  20202020          DCB      0x20,0x20,0x20,0x20
0002fc  20202020          DCB      0x20,0x20,0x20,0x20
000300  20202020          DCB      0x20,0x20,0x20,0x20
000304  20202020          DCB      0x20,0x20,0x20,0x20
000308  207c2020          DCB      0x20,0x7c,0x20,0x20
00030c  5b276669          DCB      0x5b,0x27,0x66,0x69
000310  6e322720          DCB      0x6e,0x32,0x27,0x20
000314  6f707469          DCB      0x6f,0x70,0x74,0x69
000318  6f6e206d          DCB      0x6f,0x6e,0x20,0x6d
00031c  65726765          DCB      0x65,0x72,0x67,0x65
000320  73202766          DCB      0x73,0x20,0x27,0x66
000324  696e2720          DCB      0x69,0x6e,0x27,0x20
000328  616e6420          DCB      0x61,0x6e,0x64,0x20
00032c  2766696e          DCB      0x27,0x66,0x69,0x6e
000330  32275d20          DCB      0x32,0x27,0x5d,0x20
000334  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
000338  2044454c          DCB      0x20,0x44,0x45,0x4c
00033c  2022666e          DCB      0x20,0x22,0x66,0x6e
000340  616d6522          DCB      0x61,0x6d,0x65,0x22
000344  20202020          DCB      0x20,0x20,0x20,0x20
000348  20202020          DCB      0x20,0x20,0x20,0x20
00034c  20202020          DCB      0x20,0x20,0x20,0x20
000350  2020207c          DCB      0x20,0x20,0x20,0x7c
000354  2064656c          DCB      0x20,0x64,0x65,0x6c
000358  65746573          DCB      0x65,0x74,0x65,0x73
00035c  20612066          DCB      0x20,0x61,0x20,0x66
000360  696c6520          DCB      0x69,0x6c,0x65,0x20
000364  20202020          DCB      0x20,0x20,0x20,0x20
000368  20202020          DCB      0x20,0x20,0x20,0x20
00036c  20202020          DCB      0x20,0x20,0x20,0x20
000370  20202020          DCB      0x20,0x20,0x20,0x20
000374  20202020          DCB      0x20,0x20,0x20,0x20
000378  20202020          DCB      0x20,0x20,0x20,0x20
00037c  2020207c          DCB      0x20,0x20,0x20,0x7c
000380  0a7c2044          DCB      0x0a,0x7c,0x20,0x44
000384  49522022          DCB      0x49,0x52,0x20,0x22
000388  5b6d6173          DCB      0x5b,0x6d,0x61,0x73
00038c  6b5d2220          DCB      0x6b,0x5d,0x22,0x20
000390  20202020          DCB      0x20,0x20,0x20,0x20
000394  20202020          DCB      0x20,0x20,0x20,0x20
000398  20202020          DCB      0x20,0x20,0x20,0x20
00039c  207c2064          DCB      0x20,0x7c,0x20,0x64
0003a0  6973706c          DCB      0x69,0x73,0x70,0x6c
0003a4  61797320          DCB      0x61,0x79,0x73,0x20
0003a8  61206c69          DCB      0x61,0x20,0x6c,0x69
0003ac  7374206f          DCB      0x73,0x74,0x20,0x6f
0003b0  66206669          DCB      0x66,0x20,0x66,0x69
0003b4  6c657320          DCB      0x6c,0x65,0x73,0x20
0003b8  696e2074          DCB      0x69,0x6e,0x20,0x74
0003bc  68652064          DCB      0x68,0x65,0x20,0x64
0003c0  69726563          DCB      0x69,0x72,0x65,0x63
0003c4  746f7279          DCB      0x74,0x6f,0x72,0x79
0003c8  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
0003cc  20464f52          DCB      0x20,0x46,0x4f,0x52
0003d0  4d415420          DCB      0x4d,0x41,0x54,0x20
0003d4  5b6c6162          DCB      0x5b,0x6c,0x61,0x62
0003d8  656c205b          DCB      0x65,0x6c,0x20,0x5b
0003dc  2f464154          DCB      0x2f,0x46,0x41,0x54
0003e0  33325d5d          DCB      0x33,0x32,0x5d,0x5d
0003e4  2020207c          DCB      0x20,0x20,0x20,0x7c
0003e8  20666f72          DCB      0x20,0x66,0x6f,0x72
0003ec  6d617473          DCB      0x6d,0x61,0x74,0x73
0003f0  20466c61          DCB      0x20,0x46,0x6c,0x61
0003f4  7368204d          DCB      0x73,0x68,0x20,0x4d
0003f8  656d6f72          DCB      0x65,0x6d,0x6f,0x72
0003fc  79204361          DCB      0x79,0x20,0x43,0x61
000400  72642020          DCB      0x72,0x64,0x20,0x20
000404  20202020          DCB      0x20,0x20,0x20,0x20
000408  20202020          DCB      0x20,0x20,0x20,0x20
00040c  20202020          DCB      0x20,0x20,0x20,0x20
000410  2020207c          DCB      0x20,0x20,0x20,0x7c
000414  0a7c2020          DCB      0x0a,0x7c,0x20,0x20
000418  20202020          DCB      0x20,0x20,0x20,0x20
00041c  20202020          DCB      0x20,0x20,0x20,0x20
000420  20202020          DCB      0x20,0x20,0x20,0x20
000424  20202020          DCB      0x20,0x20,0x20,0x20
000428  20202020          DCB      0x20,0x20,0x20,0x20
00042c  20202020          DCB      0x20,0x20,0x20,0x20
000430  207c205b          DCB      0x20,0x7c,0x20,0x5b
000434  2f464154          DCB      0x2f,0x46,0x41,0x54
000438  3332206f          DCB      0x33,0x32,0x20,0x6f
00043c  7074696f          DCB      0x70,0x74,0x69,0x6f
000440  6e207365          DCB      0x6e,0x20,0x73,0x65
000444  6c656374          DCB      0x6c,0x65,0x63,0x74
000448  73204641          DCB      0x73,0x20,0x46,0x41
00044c  54333220          DCB      0x54,0x33,0x32,0x20
000450  66696c65          DCB      0x66,0x69,0x6c,0x65
000454  20737973          DCB      0x20,0x73,0x79,0x73
000458  74656d5d          DCB      0x74,0x65,0x6d,0x5d
00045c  207c0a7c          DCB      0x20,0x7c,0x0a,0x7c
000460  2048454c          DCB      0x20,0x48,0x45,0x4c
000464  5020206f          DCB      0x50,0x20,0x20,0x6f
000468  7220203f          DCB      0x72,0x20,0x20,0x3f
00046c  20202020          DCB      0x20,0x20,0x20,0x20
000470  20202020          DCB      0x20,0x20,0x20,0x20
000474  20202020          DCB      0x20,0x20,0x20,0x20
000478  2020207c          DCB      0x20,0x20,0x20,0x7c
00047c  20646973          DCB      0x20,0x64,0x69,0x73
000480  706c6179          DCB      0x70,0x6c,0x61,0x79
000484  73207468          DCB      0x73,0x20,0x74,0x68
000488  69732068          DCB      0x69,0x73,0x20,0x68
00048c  656c7020          DCB      0x65,0x6c,0x70,0x20
000490  20202020          DCB      0x20,0x20,0x20,0x20
000494  20202020          DCB      0x20,0x20,0x20,0x20
000498  20202020          DCB      0x20,0x20,0x20,0x20
00049c  20202020          DCB      0x20,0x20,0x20,0x20
0004a0  20202020          DCB      0x20,0x20,0x20,0x20
0004a4  2020207c          DCB      0x20,0x20,0x20,0x7c
0004a8  0a2b2d2d          DCB      0x0a,0x2b,0x2d,0x2d
0004ac  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004b0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004b4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004b8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004bc  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004c0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004c4  2d2b2d2d          DCB      0x2d,0x2b,0x2d,0x2d
0004c8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004cc  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004d0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004d4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004d8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004dc  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004e0  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004e4  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004e8  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004ec  2d2d2d2d          DCB      0x2d,0x2d,0x2d,0x2d
0004f0  2d2b0a00          DCB      0x2d,0x2b,0x0a,0x00
                  ||cmd||
0004f4  43415000          DCB      0x43,0x41,0x50,0x00
                          DCD      0x00000000
                          DCD      cmd_capture
000500  54595045          DCB      0x54,0x59,0x50,0x45
000504  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      cmd_type
00050c  52454e00          DCB      0x52,0x45,0x4e,0x00
                          DCD      0x00000000
                          DCD      cmd_rename
000518  434f5059          DCB      0x43,0x4f,0x50,0x59
00051c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      cmd_copy
000524  44454c00          DCB      0x44,0x45,0x4c,0x00
                          DCD      0x00000000
                          DCD      cmd_delete
000530  44495200          DCB      0x44,0x49,0x52,0x00
                          DCD      0x00000000
                          DCD      cmd_dir
00053c  464f524d          DCB      0x46,0x4f,0x52,0x4d
000540  41540000          DCB      0x41,0x54,0x00,0x00
                          DCD      cmd_format
000548  48454c50          DCB      0x48,0x45,0x4c,0x50
00054c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      cmd_help
000554  46494c4c          DCB      0x46,0x49,0x4c,0x4c
000558  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      cmd_fill
000560  3f000000          DCB      0x3f,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      cmd_help

                  __ARM_use_no_argv EQU 0
